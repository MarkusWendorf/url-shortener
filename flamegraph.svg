<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="437.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="45881"><g><title>libdyld.dylib`tlv_get_addr (28 samples, 0.06%)</title><rect x="0.2398%" y="293" width="0.0610%" height="15" fill="rgb(227,0,7)" fg:x="110" fg:w="28"/><text x="0.4898%" y="303.50"></text></g><g><title>libsystem_m.dylib`pow (5 samples, 0.01%)</title><rect x="0.3008%" y="293" width="0.0109%" height="15" fill="rgb(217,0,24)" fg:x="138" fg:w="5"/><text x="0.5508%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (40 samples, 0.09%)</title><rect x="0.3291%" y="261" width="0.0872%" height="15" fill="rgb(221,193,54)" fg:x="151" fg:w="40"/><text x="0.5791%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (49 samples, 0.11%)</title><rect x="0.3139%" y="277" width="0.1068%" height="15" fill="rgb(248,212,6)" fg:x="144" fg:w="49"/><text x="0.5639%" y="287.50"></text></g><g><title>url-shortener`std::sys::pal::unix::time::Timespec::now (51 samples, 0.11%)</title><rect x="0.3139%" y="293" width="0.1112%" height="15" fill="rgb(208,68,35)" fg:x="144" fg:w="51"/><text x="0.5639%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (14 samples, 0.03%)</title><rect x="0.4316%" y="277" width="0.0305%" height="15" fill="rgb(232,128,0)" fg:x="198" fg:w="14"/><text x="0.6816%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`kevent (262 samples, 0.57%)</title><rect x="0.4686%" y="261" width="0.5710%" height="15" fill="rgb(207,160,47)" fg:x="215" fg:w="262"/><text x="0.7186%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.03%)</title><rect x="1.0898%" y="229" width="0.0305%" height="15" fill="rgb(228,23,34)" fg:x="500" fg:w="14"/><text x="1.3398%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (14 samples, 0.03%)</title><rect x="1.1203%" y="229" width="0.0305%" height="15" fill="rgb(218,30,26)" fg:x="514" fg:w="14"/><text x="1.3703%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="1.1682%" y="197" width="0.0109%" height="15" fill="rgb(220,122,19)" fg:x="536" fg:w="5"/><text x="1.4182%" y="207.50"></text></g><g><title>url-shortener`tokio::runtime::io::scheduled_io::ScheduledIo::wake (60 samples, 0.13%)</title><rect x="1.0723%" y="245" width="0.1308%" height="15" fill="rgb(250,228,42)" fg:x="492" fg:w="60"/><text x="1.3223%" y="255.50"></text></g><g><title>url-shortener`tokio::runtime::task::waker::wake_by_val (23 samples, 0.05%)</title><rect x="1.1530%" y="229" width="0.0501%" height="15" fill="rgb(240,193,28)" fg:x="529" fg:w="23"/><text x="1.4030%" y="239.50"></text></g><g><title>url-shortener`tokio::runtime::task::raw::schedule (17 samples, 0.04%)</title><rect x="1.1661%" y="213" width="0.0371%" height="15" fill="rgb(216,20,37)" fg:x="535" fg:w="17"/><text x="1.4161%" y="223.50"></text></g><g><title>url-shortener`tokio::runtime::context::with_scheduler (11 samples, 0.02%)</title><rect x="1.1791%" y="197" width="0.0240%" height="15" fill="rgb(206,188,39)" fg:x="541" fg:w="11"/><text x="1.4291%" y="207.50"></text></g><g><title>url-shortener`tokio::runtime::io::driver::Driver::turn (75 samples, 0.16%)</title><rect x="1.0418%" y="261" width="0.1635%" height="15" fill="rgb(217,207,13)" fg:x="478" fg:w="75"/><text x="1.2918%" y="271.50"></text></g><g><title>url-shortener`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (13 samples, 0.03%)</title><rect x="1.2097%" y="261" width="0.0283%" height="15" fill="rgb(231,73,38)" fg:x="555" fg:w="13"/><text x="1.4597%" y="271.50"></text></g><g><title>url-shortener`tokio::runtime::time::wheel::Wheel::next_expiration (5 samples, 0.01%)</title><rect x="1.2380%" y="261" width="0.0109%" height="15" fill="rgb(225,20,46)" fg:x="568" fg:w="5"/><text x="1.4880%" y="271.50"></text></g><g><title>url-shortener`tokio::runtime::time::Driver::park_internal (362 samples, 0.79%)</title><rect x="0.4642%" y="277" width="0.7890%" height="15" fill="rgb(210,31,41)" fg:x="213" fg:w="362"/><text x="0.7142%" y="287.50"></text></g><g><title>url-shortener`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (382 samples, 0.83%)</title><rect x="0.4250%" y="293" width="0.8326%" height="15" fill="rgb(221,200,47)" fg:x="195" fg:w="382"/><text x="0.6750%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (9 samples, 0.02%)</title><rect x="1.3513%" y="277" width="0.0196%" height="15" fill="rgb(226,26,5)" fg:x="620" fg:w="9"/><text x="1.6013%" y="287.50"></text></g><g><title>url-shortener`tokio::runtime::context::with_scheduler (11 samples, 0.02%)</title><rect x="1.3709%" y="277" width="0.0240%" height="15" fill="rgb(249,33,26)" fg:x="629" fg:w="11"/><text x="1.6209%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (31 samples, 0.07%)</title><rect x="1.4341%" y="261" width="0.0676%" height="15" fill="rgb(235,183,28)" fg:x="658" fg:w="31"/><text x="1.6841%" y="271.50"></text></g><g><title>url-shortener`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (8 samples, 0.02%)</title><rect x="1.5017%" y="261" width="0.0174%" height="15" fill="rgb(221,5,38)" fg:x="689" fg:w="8"/><text x="1.7517%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (7 samples, 0.02%)</title><rect x="1.5562%" y="245" width="0.0153%" height="15" fill="rgb(247,18,42)" fg:x="714" fg:w="7"/><text x="1.8062%" y="255.50"></text></g><g><title>url-shortener`tokio::runtime::context::with_scheduler (40 samples, 0.09%)</title><rect x="1.5191%" y="261" width="0.0872%" height="15" fill="rgb(241,131,45)" fg:x="697" fg:w="40"/><text x="1.7691%" y="271.50"></text></g><g><title>url-shortener`tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (16 samples, 0.03%)</title><rect x="1.5715%" y="245" width="0.0349%" height="15" fill="rgb(249,31,29)" fg:x="721" fg:w="16"/><text x="1.8215%" y="255.50"></text></g><g><title>url-shortener`tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (20 samples, 0.04%)</title><rect x="1.6063%" y="261" width="0.0436%" height="15" fill="rgb(225,111,53)" fg:x="737" fg:w="20"/><text x="1.8563%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="1.7131%" y="245" width="0.0327%" height="15" fill="rgb(238,160,17)" fg:x="786" fg:w="15"/><text x="1.9631%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.04%)</title><rect x="1.7545%" y="245" width="0.0371%" height="15" fill="rgb(214,148,48)" fg:x="805" fg:w="17"/><text x="2.0045%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="1.8221%" y="245" width="0.0240%" height="15" fill="rgb(232,36,49)" fg:x="836" fg:w="11"/><text x="2.0721%" y="255.50"></text></g><g><title>url-shortener`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.04%)</title><rect x="1.8461%" y="245" width="0.0392%" height="15" fill="rgb(209,103,24)" fg:x="847" fg:w="18"/><text x="2.0961%" y="255.50"></text></g><g><title>url-shortener`DYLD-STUB$$malloc (5 samples, 0.01%)</title><rect x="1.9267%" y="245" width="0.0109%" height="15" fill="rgb(229,88,8)" fg:x="884" fg:w="5"/><text x="2.1767%" y="255.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;core::option::Option&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::Serve&lt;axum::routing::Router,axum::routing::Router&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="1.9507%" y="245" width="0.0153%" height="15" fill="rgb(213,181,19)" fg:x="895" fg:w="7"/><text x="2.2007%" y="255.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;hyper_util::service::oneshot::Oneshot&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::Serve&lt;axum::routing::Router,axum::routing::Router&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="1.9660%" y="245" width="0.0283%" height="15" fill="rgb(254,191,54)" fg:x="902" fg:w="13"/><text x="2.2160%" y="255.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_insert2 (6 samples, 0.01%)</title><rect x="2.0204%" y="245" width="0.0131%" height="15" fill="rgb(241,83,37)" fg:x="927" fg:w="6"/><text x="2.2704%" y="255.50"></text></g><g><title>url-shortener`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (8 samples, 0.02%)</title><rect x="2.0335%" y="245" width="0.0174%" height="15" fill="rgb(233,36,39)" fg:x="933" fg:w="8"/><text x="2.2835%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="2.7441%" y="229" width="0.0327%" height="15" fill="rgb(226,3,54)" fg:x="1259" fg:w="15"/><text x="2.9941%" y="239.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (6 samples, 0.01%)</title><rect x="2.7767%" y="229" width="0.0131%" height="15" fill="rgb(245,192,40)" fg:x="1274" fg:w="6"/><text x="3.0267%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.05%)</title><rect x="2.7898%" y="229" width="0.0501%" height="15" fill="rgb(238,167,29)" fg:x="1280" fg:w="23"/><text x="3.0398%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (14 samples, 0.03%)</title><rect x="2.8400%" y="229" width="0.0305%" height="15" fill="rgb(232,182,51)" fg:x="1303" fg:w="14"/><text x="3.0900%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.04%)</title><rect x="2.8705%" y="229" width="0.0414%" height="15" fill="rgb(231,60,39)" fg:x="1317" fg:w="19"/><text x="3.1205%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.04%)</title><rect x="3.0579%" y="197" width="0.0371%" height="15" fill="rgb(208,69,12)" fg:x="1403" fg:w="17"/><text x="3.3079%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (87 samples, 0.19%)</title><rect x="2.9119%" y="229" width="0.1896%" height="15" fill="rgb(235,93,37)" fg:x="1336" fg:w="87"/><text x="3.1619%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.12%)</title><rect x="2.9860%" y="213" width="0.1155%" height="15" fill="rgb(213,116,39)" fg:x="1370" fg:w="53"/><text x="3.2360%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (24 samples, 0.05%)</title><rect x="3.1386%" y="213" width="0.0523%" height="15" fill="rgb(222,207,29)" fg:x="1440" fg:w="24"/><text x="3.3886%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="3.1909%" y="213" width="0.0218%" height="15" fill="rgb(206,96,30)" fg:x="1464" fg:w="10"/><text x="3.4409%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (29 samples, 0.06%)</title><rect x="3.3020%" y="197" width="0.0632%" height="15" fill="rgb(218,138,4)" fg:x="1515" fg:w="29"/><text x="3.5520%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (13 samples, 0.03%)</title><rect x="3.5963%" y="181" width="0.0283%" height="15" fill="rgb(250,191,14)" fg:x="1650" fg:w="13"/><text x="3.8463%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (270 samples, 0.59%)</title><rect x="3.1015%" y="229" width="0.5885%" height="15" fill="rgb(239,60,40)" fg:x="1423" fg:w="270"/><text x="3.3515%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (219 samples, 0.48%)</title><rect x="3.2127%" y="213" width="0.4773%" height="15" fill="rgb(206,27,48)" fg:x="1474" fg:w="219"/><text x="3.4627%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (149 samples, 0.32%)</title><rect x="3.3652%" y="197" width="0.3248%" height="15" fill="rgb(225,35,8)" fg:x="1544" fg:w="149"/><text x="3.6152%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (30 samples, 0.07%)</title><rect x="3.6246%" y="181" width="0.0654%" height="15" fill="rgb(250,213,24)" fg:x="1663" fg:w="30"/><text x="3.8746%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="3.6922%" y="229" width="0.0109%" height="15" fill="rgb(247,123,22)" fg:x="1694" fg:w="5"/><text x="3.9422%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (27 samples, 0.06%)</title><rect x="3.7031%" y="229" width="0.0588%" height="15" fill="rgb(231,138,38)" fg:x="1699" fg:w="27"/><text x="3.9531%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.06%)</title><rect x="3.7619%" y="229" width="0.0632%" height="15" fill="rgb(231,145,46)" fg:x="1726" fg:w="29"/><text x="4.0119%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="3.8251%" y="229" width="0.0109%" height="15" fill="rgb(251,118,11)" fg:x="1755" fg:w="5"/><text x="4.0751%" y="239.50"></text></g><g><title>url-shortener`&lt;F as axum::handler::Handler&lt;(M,T1,T2),S&gt;&gt;::call::_{{closure}} (6 samples, 0.01%)</title><rect x="3.8404%" y="229" width="0.0131%" height="15" fill="rgb(217,147,25)" fg:x="1762" fg:w="6"/><text x="4.0904%" y="239.50"></text></g><g><title>url-shortener`&lt;http::header::map::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="3.8796%" y="229" width="0.0174%" height="15" fill="rgb(247,81,37)" fg:x="1780" fg:w="8"/><text x="4.1296%" y="239.50"></text></g><g><title>url-shortener`&lt;http::uri::Uri as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="3.8970%" y="229" width="0.0153%" height="15" fill="rgb(209,12,38)" fg:x="1788" fg:w="7"/><text x="4.1470%" y="239.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (5 samples, 0.01%)</title><rect x="3.9886%" y="213" width="0.0109%" height="15" fill="rgb(227,1,9)" fg:x="1830" fg:w="5"/><text x="4.2386%" y="223.50"></text></g><g><title>url-shortener`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (44 samples, 0.10%)</title><rect x="3.9123%" y="229" width="0.0959%" height="15" fill="rgb(248,47,43)" fg:x="1795" fg:w="44"/><text x="4.1623%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="4.3569%" y="213" width="0.0305%" height="15" fill="rgb(221,10,30)" fg:x="1999" fg:w="14"/><text x="4.6069%" y="223.50"></text></g><g><title>url-shortener`bytes::bytes::Bytes::slice (16 samples, 0.03%)</title><rect x="4.3983%" y="213" width="0.0349%" height="15" fill="rgb(210,229,1)" fg:x="2018" fg:w="16"/><text x="4.6483%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.02%)</title><rect x="4.4615%" y="165" width="0.0174%" height="15" fill="rgb(222,148,37)" fg:x="2047" fg:w="8"/><text x="4.7115%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (49 samples, 0.11%)</title><rect x="4.4419%" y="197" width="0.1068%" height="15" fill="rgb(234,67,33)" fg:x="2038" fg:w="49"/><text x="4.6919%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (42 samples, 0.09%)</title><rect x="4.4572%" y="181" width="0.0915%" height="15" fill="rgb(247,98,35)" fg:x="2045" fg:w="42"/><text x="4.7072%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.07%)</title><rect x="4.4790%" y="165" width="0.0697%" height="15" fill="rgb(247,138,52)" fg:x="2055" fg:w="32"/><text x="4.7290%" y="175.50"></text></g><g><title>url-shortener`bytes::bytes_mut::BytesMut::split_to (54 samples, 0.12%)</title><rect x="4.4376%" y="213" width="0.1177%" height="15" fill="rgb(213,79,30)" fg:x="2036" fg:w="54"/><text x="4.6876%" y="223.50"></text></g><g><title>url-shortener`bytes::bytes_mut::shared_v_clone (6 samples, 0.01%)</title><rect x="4.5553%" y="213" width="0.0131%" height="15" fill="rgb(246,177,23)" fg:x="2090" fg:w="6"/><text x="4.8053%" y="223.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (19 samples, 0.04%)</title><rect x="4.5683%" y="213" width="0.0414%" height="15" fill="rgb(230,62,27)" fg:x="2096" fg:w="19"/><text x="4.8183%" y="223.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (10 samples, 0.02%)</title><rect x="4.6098%" y="213" width="0.0218%" height="15" fill="rgb(216,154,8)" fg:x="2115" fg:w="10"/><text x="4.8598%" y="223.50"></text></g><g><title>url-shortener`http::header::name::HeaderName::from_bytes (13 samples, 0.03%)</title><rect x="4.6403%" y="213" width="0.0283%" height="15" fill="rgb(244,35,45)" fg:x="2129" fg:w="13"/><text x="4.8903%" y="223.50"></text></g><g><title>url-shortener`http::header::name::parse_hdr (90 samples, 0.20%)</title><rect x="4.6686%" y="213" width="0.1962%" height="15" fill="rgb(251,115,12)" fg:x="2142" fg:w="90"/><text x="4.9186%" y="223.50"></text></g><g><title>url-shortener`http::uri::path::PathAndQuery::from_shared (41 samples, 0.09%)</title><rect x="4.8648%" y="213" width="0.0894%" height="15" fill="rgb(240,54,50)" fg:x="2232" fg:w="41"/><text x="5.1148%" y="223.50"></text></g><g><title>url-shortener`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (529 samples, 1.15%)</title><rect x="4.0082%" y="229" width="1.1530%" height="15" fill="rgb(233,84,52)" fg:x="1839" fg:w="529"/><text x="4.2582%" y="239.50"></text></g><g><title>url-shortener`httparse::parse_headers_iter_uninit (95 samples, 0.21%)</title><rect x="4.9541%" y="213" width="0.2071%" height="15" fill="rgb(207,117,47)" fg:x="2273" fg:w="95"/><text x="5.2041%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.02%)</title><rect x="5.2157%" y="181" width="0.0196%" height="15" fill="rgb(249,43,39)" fg:x="2393" fg:w="9"/><text x="5.4657%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (73 samples, 0.16%)</title><rect x="5.1873%" y="213" width="0.1591%" height="15" fill="rgb(209,38,44)" fg:x="2380" fg:w="73"/><text x="5.4373%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (68 samples, 0.15%)</title><rect x="5.1982%" y="197" width="0.1482%" height="15" fill="rgb(236,212,23)" fg:x="2385" fg:w="68"/><text x="5.4482%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (51 samples, 0.11%)</title><rect x="5.2353%" y="181" width="0.1112%" height="15" fill="rgb(242,79,21)" fg:x="2402" fg:w="51"/><text x="5.4853%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="5.3268%" y="165" width="0.0196%" height="15" fill="rgb(211,96,35)" fg:x="2444" fg:w="9"/><text x="5.5768%" y="175.50"></text></g><g><title>url-shortener`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (79 samples, 0.17%)</title><rect x="5.1764%" y="229" width="0.1722%" height="15" fill="rgb(253,215,40)" fg:x="2375" fg:w="79"/><text x="5.4264%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="5.4249%" y="213" width="0.0174%" height="15" fill="rgb(211,81,21)" fg:x="2489" fg:w="8"/><text x="5.6749%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.04%)</title><rect x="5.4467%" y="213" width="0.0392%" height="15" fill="rgb(208,190,38)" fg:x="2499" fg:w="18"/><text x="5.6967%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="5.5949%" y="181" width="0.0218%" height="15" fill="rgb(235,213,38)" fg:x="2567" fg:w="10"/><text x="5.8449%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (66 samples, 0.14%)</title><rect x="5.4859%" y="213" width="0.1439%" height="15" fill="rgb(237,122,38)" fg:x="2517" fg:w="66"/><text x="5.7359%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.10%)</title><rect x="5.5252%" y="197" width="0.1046%" height="15" fill="rgb(244,218,35)" fg:x="2535" fg:w="48"/><text x="5.7752%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="5.6167%" y="181" width="0.0131%" height="15" fill="rgb(240,68,47)" fg:x="2577" fg:w="6"/><text x="5.8667%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="5.6494%" y="213" width="0.0327%" height="15" fill="rgb(210,16,53)" fg:x="2592" fg:w="15"/><text x="5.8994%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.02%)</title><rect x="5.6821%" y="213" width="0.0153%" height="15" fill="rgb(235,124,12)" fg:x="2607" fg:w="7"/><text x="5.9321%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.04%)</title><rect x="5.9197%" y="197" width="0.0392%" height="15" fill="rgb(224,169,11)" fg:x="2716" fg:w="18"/><text x="6.1697%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (13 samples, 0.03%)</title><rect x="5.9589%" y="197" width="0.0283%" height="15" fill="rgb(250,166,2)" fg:x="2734" fg:w="13"/><text x="6.2089%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="5.9872%" y="197" width="0.0327%" height="15" fill="rgb(242,216,29)" fg:x="2747" fg:w="15"/><text x="6.2372%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (10 samples, 0.02%)</title><rect x="6.1202%" y="181" width="0.0218%" height="15" fill="rgb(230,116,27)" fg:x="2808" fg:w="10"/><text x="6.3702%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.04%)</title><rect x="6.2226%" y="165" width="0.0414%" height="15" fill="rgb(228,99,48)" fg:x="2855" fg:w="19"/><text x="6.4726%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (118 samples, 0.26%)</title><rect x="6.0199%" y="197" width="0.2572%" height="15" fill="rgb(253,11,6)" fg:x="2762" fg:w="118"/><text x="6.2699%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (62 samples, 0.14%)</title><rect x="6.1420%" y="181" width="0.1351%" height="15" fill="rgb(247,143,39)" fg:x="2818" fg:w="62"/><text x="6.3920%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="6.2640%" y="165" width="0.0131%" height="15" fill="rgb(236,97,10)" fg:x="2874" fg:w="6"/><text x="6.5140%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (8 samples, 0.02%)</title><rect x="6.2989%" y="181" width="0.0174%" height="15" fill="rgb(233,208,19)" fg:x="2890" fg:w="8"/><text x="6.5489%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.02%)</title><rect x="6.3425%" y="165" width="0.0240%" height="15" fill="rgb(216,164,2)" fg:x="2910" fg:w="11"/><text x="6.5925%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (90 samples, 0.20%)</title><rect x="6.2771%" y="197" width="0.1962%" height="15" fill="rgb(220,129,5)" fg:x="2880" fg:w="90"/><text x="6.5271%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (69 samples, 0.15%)</title><rect x="6.3229%" y="181" width="0.1504%" height="15" fill="rgb(242,17,10)" fg:x="2901" fg:w="69"/><text x="6.5729%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (48 samples, 0.10%)</title><rect x="6.3686%" y="165" width="0.1046%" height="15" fill="rgb(242,107,0)" fg:x="2922" fg:w="48"/><text x="6.6186%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (35 samples, 0.08%)</title><rect x="6.4863%" y="197" width="0.0763%" height="15" fill="rgb(251,28,31)" fg:x="2976" fg:w="35"/><text x="6.7363%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (22 samples, 0.05%)</title><rect x="6.5626%" y="197" width="0.0480%" height="15" fill="rgb(233,223,10)" fg:x="3011" fg:w="22"/><text x="6.8126%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2,454 samples, 5.35%)</title><rect x="6.6455%" y="181" width="5.3486%" height="15" fill="rgb(215,21,27)" fg:x="3049" fg:w="2454"/><text x="6.8955%" y="191.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2,478 samples, 5.40%)</title><rect x="6.6106%" y="197" width="5.4009%" height="15" fill="rgb(232,23,21)" fg:x="3033" fg:w="2478"/><text x="6.8606%" y="207.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (8 samples, 0.02%)</title><rect x="11.9941%" y="181" width="0.0174%" height="15" fill="rgb(244,5,23)" fg:x="5503" fg:w="8"/><text x="12.2441%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1,786 samples, 3.89%)</title><rect x="12.0268%" y="181" width="3.8927%" height="15" fill="rgb(226,81,46)" fg:x="5518" fg:w="1786"/><text x="12.2768%" y="191.50">libs..</text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__psynch_mutexdrop (6 samples, 0.01%)</title><rect x="15.9194%" y="181" width="0.0131%" height="15" fill="rgb(247,70,30)" fg:x="7304" fg:w="6"/><text x="16.1694%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1,801 samples, 3.93%)</title><rect x="12.0115%" y="197" width="3.9254%" height="15" fill="rgb(212,68,19)" fg:x="5511" fg:w="1801"/><text x="12.2615%" y="207.50">libs..</text></g><g><title>url-shortener`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (31 samples, 0.07%)</title><rect x="15.9500%" y="197" width="0.0676%" height="15" fill="rgb(240,187,13)" fg:x="7318" fg:w="31"/><text x="16.2000%" y="207.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (7 samples, 0.02%)</title><rect x="16.0960%" y="149" width="0.0153%" height="15" fill="rgb(223,113,26)" fg:x="7385" fg:w="7"/><text x="16.3460%" y="159.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_insert2 (23 samples, 0.05%)</title><rect x="16.0633%" y="165" width="0.0501%" height="15" fill="rgb(206,192,2)" fg:x="7370" fg:w="23"/><text x="16.3133%" y="175.50"></text></g><g><title>url-shortener`&lt;[(K,V) (47 samples, 0.10%)</title><rect x="16.0175%" y="197" width="0.1024%" height="15" fill="rgb(241,108,4)" fg:x="7349" fg:w="47"/><text x="16.2675%" y="207.50"></text></g><g><title> N] as axum_core::response::into_response_parts::IntoResponseParts&gt;::into_response_parts (47 samples, 0.10%)</title><rect x="16.0175%" y="181" width="0.1024%" height="15" fill="rgb(247,173,49)" fg:x="7349" fg:w="47"/><text x="16.2675%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="16.3510%" y="181" width="0.0131%" height="15" fill="rgb(224,114,35)" fg:x="7502" fg:w="6"/><text x="16.6010%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (16 samples, 0.03%)</title><rect x="16.3641%" y="181" width="0.0349%" height="15" fill="rgb(245,159,27)" fg:x="7508" fg:w="16"/><text x="16.6141%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="16.3989%" y="181" width="0.0327%" height="15" fill="rgb(245,172,44)" fg:x="7524" fg:w="15"/><text x="16.6489%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.03%)</title><rect x="16.5798%" y="149" width="0.0262%" height="15" fill="rgb(236,23,11)" fg:x="7607" fg:w="12"/><text x="16.8298%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (84 samples, 0.18%)</title><rect x="16.4360%" y="181" width="0.1831%" height="15" fill="rgb(205,117,38)" fg:x="7541" fg:w="84"/><text x="16.6860%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.10%)</title><rect x="16.5145%" y="165" width="0.1046%" height="15" fill="rgb(237,72,25)" fg:x="7577" fg:w="48"/><text x="16.7645%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="16.6060%" y="149" width="0.0131%" height="15" fill="rgb(244,70,9)" fg:x="7619" fg:w="6"/><text x="16.8560%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.01%)</title><rect x="16.6496%" y="149" width="0.0109%" height="15" fill="rgb(217,125,39)" fg:x="7639" fg:w="5"/><text x="16.8996%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.08%)</title><rect x="16.6191%" y="181" width="0.0828%" height="15" fill="rgb(235,36,10)" fg:x="7625" fg:w="38"/><text x="16.8691%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.06%)</title><rect x="16.6387%" y="165" width="0.0632%" height="15" fill="rgb(251,123,47)" fg:x="7634" fg:w="29"/><text x="16.8887%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.04%)</title><rect x="16.6605%" y="149" width="0.0414%" height="15" fill="rgb(221,13,13)" fg:x="7644" fg:w="19"/><text x="16.9105%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="16.6888%" y="133" width="0.0131%" height="15" fill="rgb(238,131,9)" fg:x="7657" fg:w="6"/><text x="16.9388%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="16.7063%" y="181" width="0.0131%" height="15" fill="rgb(211,50,8)" fg:x="7665" fg:w="6"/><text x="16.9563%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.02%)</title><rect x="16.7193%" y="181" width="0.0218%" height="15" fill="rgb(245,182,24)" fg:x="7671" fg:w="10"/><text x="16.9693%" y="191.50"></text></g><g><title>url-shortener`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (17 samples, 0.04%)</title><rect x="16.7455%" y="181" width="0.0371%" height="15" fill="rgb(242,14,37)" fg:x="7683" fg:w="17"/><text x="16.9955%" y="191.50"></text></g><g><title>url-shortener`core::str::converts::from_utf8 (6 samples, 0.01%)</title><rect x="16.7695%" y="165" width="0.0131%" height="15" fill="rgb(246,228,12)" fg:x="7694" fg:w="6"/><text x="17.0195%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.03%)</title><rect x="16.9133%" y="133" width="0.0327%" height="15" fill="rgb(213,55,15)" fg:x="7760" fg:w="15"/><text x="17.1633%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (53 samples, 0.12%)</title><rect x="16.8349%" y="165" width="0.1155%" height="15" fill="rgb(209,9,3)" fg:x="7724" fg:w="53"/><text x="17.0849%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (31 samples, 0.07%)</title><rect x="16.8828%" y="149" width="0.0676%" height="15" fill="rgb(230,59,30)" fg:x="7746" fg:w="31"/><text x="17.1328%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.05%)</title><rect x="16.9504%" y="165" width="0.0545%" height="15" fill="rgb(209,121,21)" fg:x="7777" fg:w="25"/><text x="17.2004%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.04%)</title><rect x="16.9613%" y="149" width="0.0436%" height="15" fill="rgb(220,109,13)" fg:x="7782" fg:w="20"/><text x="17.2113%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.03%)</title><rect x="16.9743%" y="133" width="0.0305%" height="15" fill="rgb(232,18,1)" fg:x="7788" fg:w="14"/><text x="17.2243%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="17.0049%" y="165" width="0.0131%" height="15" fill="rgb(215,41,42)" fg:x="7802" fg:w="6"/><text x="17.2549%" y="175.50"></text></g><g><title>url-shortener`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (11 samples, 0.02%)</title><rect x="17.0223%" y="165" width="0.0240%" height="15" fill="rgb(224,123,36)" fg:x="7810" fg:w="11"/><text x="17.2723%" y="175.50"></text></g><g><title>url-shortener`core::str::converts::from_utf8 (5 samples, 0.01%)</title><rect x="17.0354%" y="149" width="0.0109%" height="15" fill="rgb(240,125,3)" fg:x="7816" fg:w="5"/><text x="17.2854%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (5 samples, 0.01%)</title><rect x="17.0637%" y="133" width="0.0109%" height="15" fill="rgb(205,98,50)" fg:x="7829" fg:w="5"/><text x="17.3137%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="17.0615%" y="149" width="0.0349%" height="15" fill="rgb(205,185,37)" fg:x="7828" fg:w="16"/><text x="17.3115%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="17.0790%" y="133" width="0.0174%" height="15" fill="rgb(238,207,15)" fg:x="7836" fg:w="8"/><text x="17.3290%" y="143.50"></text></g><g><title>url-shortener`&lt;serde_path_to_error::Chain as core::clone::Clone&gt;::clone (24 samples, 0.05%)</title><rect x="17.0463%" y="165" width="0.0523%" height="15" fill="rgb(213,199,42)" fg:x="7821" fg:w="24"/><text x="17.2963%" y="175.50"></text></g><g><title>url-shortener`&lt;serde_path_to_error::de::TrackedSeed&lt;X&gt; as serde::de::DeserializeSeed&gt;::deserialize (144 samples, 0.31%)</title><rect x="16.7891%" y="181" width="0.3139%" height="15" fill="rgb(235,201,11)" fg:x="7703" fg:w="144"/><text x="17.0391%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="17.1117%" y="165" width="0.0305%" height="15" fill="rgb(207,46,11)" fg:x="7851" fg:w="14"/><text x="17.3617%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="17.1247%" y="149" width="0.0174%" height="15" fill="rgb(241,35,35)" fg:x="7857" fg:w="8"/><text x="17.3747%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="17.1313%" y="133" width="0.0109%" height="15" fill="rgb(243,32,47)" fg:x="7860" fg:w="5"/><text x="17.3813%" y="143.50"></text></g><g><title>url-shortener`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (16 samples, 0.03%)</title><rect x="17.1117%" y="181" width="0.0349%" height="15" fill="rgb(247,202,23)" fg:x="7851" fg:w="16"/><text x="17.3617%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (8 samples, 0.02%)</title><rect x="17.2795%" y="165" width="0.0174%" height="15" fill="rgb(219,102,11)" fg:x="7928" fg:w="8"/><text x="17.5295%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="17.2969%" y="165" width="0.0131%" height="15" fill="rgb(243,110,44)" fg:x="7936" fg:w="6"/><text x="17.5469%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.03%)</title><rect x="17.4342%" y="133" width="0.0305%" height="15" fill="rgb(222,74,54)" fg:x="7999" fg:w="14"/><text x="17.6842%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (84 samples, 0.18%)</title><rect x="17.3100%" y="165" width="0.1831%" height="15" fill="rgb(216,99,12)" fg:x="7942" fg:w="84"/><text x="17.5600%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (61 samples, 0.13%)</title><rect x="17.3601%" y="149" width="0.1330%" height="15" fill="rgb(226,22,26)" fg:x="7965" fg:w="61"/><text x="17.6101%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.03%)</title><rect x="17.4647%" y="133" width="0.0283%" height="15" fill="rgb(217,163,10)" fg:x="8013" fg:w="13"/><text x="17.7147%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.08%)</title><rect x="17.4931%" y="165" width="0.0785%" height="15" fill="rgb(213,25,53)" fg:x="8026" fg:w="36"/><text x="17.7431%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.07%)</title><rect x="17.5040%" y="149" width="0.0676%" height="15" fill="rgb(252,105,26)" fg:x="8031" fg:w="31"/><text x="17.7540%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.05%)</title><rect x="17.5236%" y="133" width="0.0480%" height="15" fill="rgb(220,39,43)" fg:x="8040" fg:w="22"/><text x="17.7736%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="17.5585%" y="117" width="0.0131%" height="15" fill="rgb(229,68,48)" fg:x="8056" fg:w="6"/><text x="17.8085%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="17.5781%" y="165" width="0.0109%" height="15" fill="rgb(252,8,32)" fg:x="8065" fg:w="5"/><text x="17.8281%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="17.6631%" y="133" width="0.0174%" height="15" fill="rgb(223,20,43)" fg:x="8104" fg:w="8"/><text x="17.9131%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (12 samples, 0.03%)</title><rect x="17.7198%" y="117" width="0.0262%" height="15" fill="rgb(229,81,49)" fg:x="8130" fg:w="12"/><text x="17.9698%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="17.7459%" y="117" width="0.0240%" height="15" fill="rgb(236,28,36)" fg:x="8142" fg:w="11"/><text x="17.9959%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (76 samples, 0.17%)</title><rect x="17.7699%" y="117" width="0.1656%" height="15" fill="rgb(249,185,26)" fg:x="8153" fg:w="76"/><text x="18.0199%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.09%)</title><rect x="17.8483%" y="101" width="0.0872%" height="15" fill="rgb(249,174,33)" fg:x="8189" fg:w="40"/><text x="18.0983%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="17.9181%" y="85" width="0.0174%" height="15" fill="rgb(233,201,37)" fg:x="8221" fg:w="8"/><text x="18.1681%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="17.9355%" y="117" width="0.0109%" height="15" fill="rgb(221,78,26)" fg:x="8229" fg:w="5"/><text x="18.1855%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.02%)</title><rect x="17.9464%" y="117" width="0.0240%" height="15" fill="rgb(250,127,30)" fg:x="8234" fg:w="11"/><text x="18.1964%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (5 samples, 0.01%)</title><rect x="17.9704%" y="117" width="0.0109%" height="15" fill="rgb(230,49,44)" fg:x="8245" fg:w="5"/><text x="18.2204%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.01%)</title><rect x="17.9813%" y="117" width="0.0131%" height="15" fill="rgb(229,67,23)" fg:x="8250" fg:w="6"/><text x="18.2313%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_trylock (5 samples, 0.01%)</title><rect x="17.9944%" y="117" width="0.0109%" height="15" fill="rgb(249,83,47)" fg:x="8256" fg:w="5"/><text x="18.2444%" y="127.50"></text></g><g><title>url-shortener`DYLD-STUB$$free (8 samples, 0.02%)</title><rect x="18.0118%" y="117" width="0.0174%" height="15" fill="rgb(215,43,3)" fg:x="8264" fg:w="8"/><text x="18.2618%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.03%)</title><rect x="18.1578%" y="69" width="0.0283%" height="15" fill="rgb(238,154,13)" fg:x="8331" fg:w="13"/><text x="18.4078%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (71 samples, 0.15%)</title><rect x="18.0663%" y="101" width="0.1547%" height="15" fill="rgb(219,56,2)" fg:x="8289" fg:w="71"/><text x="18.3163%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 0.12%)</title><rect x="18.1012%" y="85" width="0.1199%" height="15" fill="rgb(233,0,4)" fg:x="8305" fg:w="55"/><text x="18.3512%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (16 samples, 0.03%)</title><rect x="18.1862%" y="69" width="0.0349%" height="15" fill="rgb(235,30,7)" fg:x="8344" fg:w="16"/><text x="18.4362%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (6 samples, 0.01%)</title><rect x="18.2298%" y="101" width="0.0131%" height="15" fill="rgb(250,79,13)" fg:x="8364" fg:w="6"/><text x="18.4798%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="18.2973%" y="53" width="0.0174%" height="15" fill="rgb(211,146,34)" fg:x="8395" fg:w="8"/><text x="18.5473%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.07%)</title><rect x="18.2537%" y="85" width="0.0697%" height="15" fill="rgb(228,22,38)" fg:x="8375" fg:w="32"/><text x="18.5037%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.05%)</title><rect x="18.2712%" y="69" width="0.0523%" height="15" fill="rgb(235,168,5)" fg:x="8383" fg:w="24"/><text x="18.5212%" y="79.50"></text></g><g><title>url-shortener`&lt;futures_channel::mpsc::queue::Queue&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.09%)</title><rect x="18.2428%" y="101" width="0.0850%" height="15" fill="rgb(221,155,16)" fg:x="8370" fg:w="39"/><text x="18.4928%" y="111.50"></text></g><g><title>url-shortener`alloc::sync::Arc&lt;T,A&gt;::drop_slow (135 samples, 0.29%)</title><rect x="18.0358%" y="117" width="0.2942%" height="15" fill="rgb(215,215,53)" fg:x="8275" fg:w="135"/><text x="18.2858%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.05%)</title><rect x="18.3366%" y="101" width="0.0458%" height="15" fill="rgb(223,4,10)" fg:x="8413" fg:w="21"/><text x="18.5866%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="18.3584%" y="85" width="0.0240%" height="15" fill="rgb(234,103,6)" fg:x="8423" fg:w="11"/><text x="18.6084%" y="95.50"></text></g><g><title>url-shortener`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (319 samples, 0.70%)</title><rect x="17.6936%" y="133" width="0.6953%" height="15" fill="rgb(227,97,0)" fg:x="8118" fg:w="319"/><text x="17.9436%" y="143.50"></text></g><g><title>url-shortener`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (27 samples, 0.06%)</title><rect x="18.3300%" y="117" width="0.0588%" height="15" fill="rgb(234,150,53)" fg:x="8410" fg:w="27"/><text x="18.5800%" y="127.50"></text></g><g><title>url-shortener`&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_frame (367 samples, 0.80%)</title><rect x="17.5955%" y="165" width="0.7999%" height="15" fill="rgb(228,201,54)" fg:x="8073" fg:w="367"/><text x="17.8455%" y="175.50"></text></g><g><title>url-shortener`&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_frame (353 samples, 0.77%)</title><rect x="17.6260%" y="149" width="0.7694%" height="15" fill="rgb(222,22,37)" fg:x="8087" fg:w="353"/><text x="17.8760%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (5 samples, 0.01%)</title><rect x="18.4259%" y="101" width="0.0109%" height="15" fill="rgb(237,53,32)" fg:x="8454" fg:w="5"/><text x="18.6759%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.01%)</title><rect x="18.4521%" y="85" width="0.0109%" height="15" fill="rgb(233,25,53)" fg:x="8466" fg:w="5"/><text x="18.7021%" y="95.50"></text></g><g><title>url-shortener`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (45 samples, 0.10%)</title><rect x="18.4063%" y="149" width="0.0981%" height="15" fill="rgb(210,40,34)" fg:x="8445" fg:w="45"/><text x="18.6563%" y="159.50"></text></g><g><title>url-shortener`alloc::raw_vec::finish_grow (39 samples, 0.09%)</title><rect x="18.4194%" y="133" width="0.0850%" height="15" fill="rgb(241,220,44)" fg:x="8451" fg:w="39"/><text x="18.6694%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.08%)</title><rect x="18.4259%" y="117" width="0.0785%" height="15" fill="rgb(235,28,35)" fg:x="8454" fg:w="36"/><text x="18.6759%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.06%)</title><rect x="18.4434%" y="101" width="0.0610%" height="15" fill="rgb(210,56,17)" fg:x="8462" fg:w="28"/><text x="18.6934%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.04%)</title><rect x="18.4630%" y="85" width="0.0414%" height="15" fill="rgb(224,130,29)" fg:x="8471" fg:w="19"/><text x="18.7130%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="18.4935%" y="69" width="0.0109%" height="15" fill="rgb(235,212,8)" fg:x="8485" fg:w="5"/><text x="18.7435%" y="79.50"></text></g><g><title>url-shortener`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (48 samples, 0.10%)</title><rect x="18.4020%" y="165" width="0.1046%" height="15" fill="rgb(223,33,50)" fg:x="8443" fg:w="48"/><text x="18.6520%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (9 samples, 0.02%)</title><rect x="18.5218%" y="149" width="0.0196%" height="15" fill="rgb(219,149,13)" fg:x="8498" fg:w="9"/><text x="18.7718%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.04%)</title><rect x="18.5414%" y="149" width="0.0414%" height="15" fill="rgb(250,156,29)" fg:x="8507" fg:w="19"/><text x="18.7914%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.06%)</title><rect x="18.5829%" y="149" width="0.0632%" height="15" fill="rgb(216,193,19)" fg:x="8526" fg:w="29"/><text x="18.8329%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.03%)</title><rect x="18.6112%" y="133" width="0.0349%" height="15" fill="rgb(216,135,14)" fg:x="8539" fg:w="16"/><text x="18.8612%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (7 samples, 0.02%)</title><rect x="18.7725%" y="117" width="0.0153%" height="15" fill="rgb(241,47,5)" fg:x="8613" fg:w="7"/><text x="19.0225%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.05%)</title><rect x="18.8706%" y="101" width="0.0523%" height="15" fill="rgb(233,42,35)" fg:x="8658" fg:w="24"/><text x="19.1206%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (112 samples, 0.24%)</title><rect x="18.7006%" y="133" width="0.2441%" height="15" fill="rgb(231,13,6)" fg:x="8580" fg:w="112"/><text x="18.9506%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (72 samples, 0.16%)</title><rect x="18.7877%" y="117" width="0.1569%" height="15" fill="rgb(207,181,40)" fg:x="8620" fg:w="72"/><text x="19.0377%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.02%)</title><rect x="18.9229%" y="101" width="0.0218%" height="15" fill="rgb(254,173,49)" fg:x="8682" fg:w="10"/><text x="19.1729%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.02%)</title><rect x="18.9490%" y="133" width="0.0240%" height="15" fill="rgb(221,1,38)" fg:x="8694" fg:w="11"/><text x="19.1990%" y="143.50"></text></g><g><title>url-shortener`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (154 samples, 0.34%)</title><rect x="18.6548%" y="149" width="0.3357%" height="15" fill="rgb(206,124,46)" fg:x="8559" fg:w="154"/><text x="18.9048%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.05%)</title><rect x="19.2716%" y="101" width="0.0480%" height="15" fill="rgb(249,21,11)" fg:x="8842" fg:w="22"/><text x="19.5216%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (157 samples, 0.34%)</title><rect x="19.0144%" y="133" width="0.3422%" height="15" fill="rgb(222,201,40)" fg:x="8724" fg:w="157"/><text x="19.2644%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (130 samples, 0.28%)</title><rect x="19.0733%" y="117" width="0.2833%" height="15" fill="rgb(235,61,29)" fg:x="8751" fg:w="130"/><text x="19.3233%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.04%)</title><rect x="19.3195%" y="101" width="0.0371%" height="15" fill="rgb(219,207,3)" fg:x="8864" fg:w="17"/><text x="19.5695%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (22 samples, 0.05%)</title><rect x="19.3631%" y="133" width="0.0480%" height="15" fill="rgb(222,56,46)" fg:x="8884" fg:w="22"/><text x="19.6131%" y="143.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;http::request::Parts&gt; (423 samples, 0.92%)</title><rect x="18.5153%" y="165" width="0.9220%" height="15" fill="rgb(239,76,54)" fg:x="8495" fg:w="423"/><text x="18.7653%" y="175.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (198 samples, 0.43%)</title><rect x="19.0057%" y="149" width="0.4316%" height="15" fill="rgb(231,124,27)" fg:x="8720" fg:w="198"/><text x="19.2557%" y="159.50"></text></g><g><title>url-shortener`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="19.4111%" y="133" width="0.0262%" height="15" fill="rgb(249,195,6)" fg:x="8906" fg:w="12"/><text x="19.6611%" y="143.50"></text></g><g><title>url-shortener`bytes::bytes_mut::shared_v_drop (6 samples, 0.01%)</title><rect x="19.4242%" y="117" width="0.0131%" height="15" fill="rgb(237,174,47)" fg:x="8912" fg:w="6"/><text x="19.6742%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.08%)</title><rect x="19.4460%" y="149" width="0.0785%" height="15" fill="rgb(206,201,31)" fg:x="8922" fg:w="36"/><text x="19.6960%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.05%)</title><rect x="19.4699%" y="133" width="0.0545%" height="15" fill="rgb(231,57,52)" fg:x="8933" fg:w="25"/><text x="19.7199%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="19.5113%" y="117" width="0.0131%" height="15" fill="rgb(248,177,22)" fg:x="8952" fg:w="6"/><text x="19.7613%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="19.5266%" y="149" width="0.0109%" height="15" fill="rgb(215,211,37)" fg:x="8959" fg:w="5"/><text x="19.7766%" y="159.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;http_body_util::collected::Collected&lt;bytes::bytes::Bytes&gt;&gt; (51 samples, 0.11%)</title><rect x="19.4372%" y="165" width="0.1112%" height="15" fill="rgb(241,128,51)" fg:x="8918" fg:w="51"/><text x="19.6872%" y="175.50"></text></g><g><title>url-shortener`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="19.5375%" y="149" width="0.0109%" height="15" fill="rgb(227,165,31)" fg:x="8964" fg:w="5"/><text x="19.7875%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="19.5637%" y="149" width="0.0392%" height="15" fill="rgb(228,167,24)" fg:x="8976" fg:w="18"/><text x="19.8137%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.03%)</title><rect x="19.5767%" y="133" width="0.0262%" height="15" fill="rgb(228,143,12)" fg:x="8982" fg:w="12"/><text x="19.8267%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="19.6160%" y="133" width="0.0109%" height="15" fill="rgb(249,149,8)" fg:x="9000" fg:w="5"/><text x="19.8660%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="19.6944%" y="101" width="0.0174%" height="15" fill="rgb(243,35,44)" fg:x="9036" fg:w="8"/><text x="19.9444%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (42 samples, 0.09%)</title><rect x="19.6290%" y="133" width="0.0915%" height="15" fill="rgb(246,89,9)" fg:x="9006" fg:w="42"/><text x="19.8790%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (31 samples, 0.07%)</title><rect x="19.6530%" y="117" width="0.0676%" height="15" fill="rgb(233,213,13)" fg:x="9017" fg:w="31"/><text x="19.9030%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="19.7206%" y="133" width="0.0109%" height="15" fill="rgb(233,141,41)" fg:x="9048" fg:w="5"/><text x="19.9706%" y="143.50"></text></g><g><title>url-shortener`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.02%)</title><rect x="19.7402%" y="133" width="0.0153%" height="15" fill="rgb(239,167,4)" fg:x="9057" fg:w="7"/><text x="19.9902%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="19.8492%" y="85" width="0.0131%" height="15" fill="rgb(209,217,16)" fg:x="9107" fg:w="6"/><text x="20.0992%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (35 samples, 0.08%)</title><rect x="19.7947%" y="117" width="0.0763%" height="15" fill="rgb(219,88,35)" fg:x="9082" fg:w="35"/><text x="20.0447%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.05%)</title><rect x="19.8230%" y="101" width="0.0480%" height="15" fill="rgb(220,193,23)" fg:x="9095" fg:w="22"/><text x="20.0730%" y="111.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;http_body_util::limited::Limited&lt;axum_core::body::Body&gt;,axum_core::error::Error::new&lt;alloc::boxed::Box&lt;dyn core::error::Error+core::marker::Send+core::marker::Sync&gt;&gt;&gt;&gt; (124 samples, 0.27%)</title><rect x="19.6138%" y="149" width="0.2703%" height="15" fill="rgb(230,90,52)" fg:x="8999" fg:w="124"/><text x="19.8638%" y="159.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;hyper::body::incoming::Incoming&gt; (59 samples, 0.13%)</title><rect x="19.7555%" y="133" width="0.1286%" height="15" fill="rgb(252,106,19)" fg:x="9064" fg:w="59"/><text x="20.0055%" y="143.50"></text></g><g><title>url-shortener`axum_core::extract::request_parts::_&lt;impl axum_core::extract::FromRequest&lt;S&gt; for bytes::bytes::Bytes&gt;::from_request::_{{closure}} (1,259 samples, 2.74%)</title><rect x="17.1465%" y="181" width="2.7441%" height="15" fill="rgb(206,74,20)" fg:x="7867" fg:w="1259"/><text x="17.3965%" y="191.50">ur..</text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;http_body_util::combinators::collect::Collect&lt;axum_core::body::Body&gt;&gt; (157 samples, 0.34%)</title><rect x="19.5484%" y="165" width="0.3422%" height="15" fill="rgb(230,138,44)" fg:x="8969" fg:w="157"/><text x="19.7984%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (8 samples, 0.02%)</title><rect x="19.9058%" y="165" width="0.0174%" height="15" fill="rgb(235,182,43)" fg:x="9133" fg:w="8"/><text x="20.1558%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (10 samples, 0.02%)</title><rect x="20.0105%" y="149" width="0.0218%" height="15" fill="rgb(242,16,51)" fg:x="9181" fg:w="10"/><text x="20.2605%" y="159.50"></text></g><g><title>url-shortener`bytes::bytes_mut::shared_v_drop (68 samples, 0.15%)</title><rect x="19.8993%" y="181" width="0.1482%" height="15" fill="rgb(248,9,4)" fg:x="9130" fg:w="68"/><text x="20.1493%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (57 samples, 0.12%)</title><rect x="19.9233%" y="165" width="0.1242%" height="15" fill="rgb(210,31,22)" fg:x="9141" fg:w="57"/><text x="20.1733%" y="175.50"></text></g><g><title>url-shortener`&lt;axum::json::Json&lt;T&gt; as axum_core::extract::FromRequest&lt;S&gt;&gt;::from_request::_{{closure}} (1,806 samples, 3.94%)</title><rect x="16.1200%" y="197" width="3.9363%" height="15" fill="rgb(239,54,39)" fg:x="7396" fg:w="1806"/><text x="16.3700%" y="207.50">url-..</text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (5 samples, 0.01%)</title><rect x="20.0584%" y="165" width="0.0109%" height="15" fill="rgb(230,99,41)" fg:x="9203" fg:w="5"/><text x="20.3084%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.05%)</title><rect x="20.0562%" y="181" width="0.0523%" height="15" fill="rgb(253,106,12)" fg:x="9202" fg:w="24"/><text x="20.3062%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.04%)</title><rect x="20.0693%" y="165" width="0.0392%" height="15" fill="rgb(213,46,41)" fg:x="9208" fg:w="18"/><text x="20.3193%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="20.0911%" y="149" width="0.0174%" height="15" fill="rgb(215,133,35)" fg:x="9218" fg:w="8"/><text x="20.3411%" y="159.50"></text></g><g><title>url-shortener`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (25 samples, 0.05%)</title><rect x="20.0562%" y="197" width="0.0545%" height="15" fill="rgb(213,28,5)" fg:x="9202" fg:w="25"/><text x="20.3062%" y="207.50"></text></g><g><title>url-shortener`&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="20.1107%" y="197" width="0.0153%" height="15" fill="rgb(215,77,49)" fg:x="9227" fg:w="7"/><text x="20.3607%" y="207.50"></text></g><g><title>url-shortener`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (153 samples, 0.33%)</title><rect x="20.1260%" y="197" width="0.3335%" height="15" fill="rgb(248,100,22)" fg:x="9234" fg:w="153"/><text x="20.3760%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="20.5118%" y="181" width="0.0109%" height="15" fill="rgb(208,67,9)" fg:x="9411" fg:w="5"/><text x="20.7618%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="20.5227%" y="181" width="0.0131%" height="15" fill="rgb(219,133,21)" fg:x="9416" fg:w="6"/><text x="20.7727%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="20.5357%" y="181" width="0.0109%" height="15" fill="rgb(246,46,29)" fg:x="9422" fg:w="5"/><text x="20.7857%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="20.5684%" y="181" width="0.0174%" height="15" fill="rgb(246,185,52)" fg:x="9437" fg:w="8"/><text x="20.8184%" y="191.50"></text></g><g><title>url-shortener`&lt;alloc::sync::Arc&lt;T,A&gt; as core::hash::Hash&gt;::hash (12 samples, 0.03%)</title><rect x="20.5859%" y="181" width="0.0262%" height="15" fill="rgb(252,136,11)" fg:x="9445" fg:w="12"/><text x="20.8359%" y="191.50"></text></g><g><title>url-shortener`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.02%)</title><rect x="20.6861%" y="149" width="0.0153%" height="15" fill="rgb(219,138,53)" fg:x="9491" fg:w="7"/><text x="20.9361%" y="159.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;rusqlite::raw_statement::RawStatement&gt; (9 samples, 0.02%)</title><rect x="20.7014%" y="149" width="0.0196%" height="15" fill="rgb(211,51,23)" fg:x="9498" fg:w="9"/><text x="20.9514%" y="159.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;rusqlite::statement::Statement&gt; (30 samples, 0.07%)</title><rect x="20.6818%" y="165" width="0.0654%" height="15" fill="rgb(247,221,28)" fg:x="9489" fg:w="30"/><text x="20.9318%" y="175.50"></text></g><g><title>url-shortener`sqlite3_finalize (12 samples, 0.03%)</title><rect x="20.7210%" y="149" width="0.0262%" height="15" fill="rgb(251,222,45)" fg:x="9507" fg:w="12"/><text x="20.9710%" y="159.50"></text></g><g><title>url-shortener`sqlite3_clear_bindings (18 samples, 0.04%)</title><rect x="20.7472%" y="165" width="0.0392%" height="15" fill="rgb(217,162,53)" fg:x="9519" fg:w="18"/><text x="20.9972%" y="175.50"></text></g><g><title>url-shortener`vdbeMemClear (11 samples, 0.02%)</title><rect x="20.7624%" y="149" width="0.0240%" height="15" fill="rgb(229,93,14)" fg:x="9526" fg:w="11"/><text x="21.0124%" y="159.50"></text></g><g><title>url-shortener`sqlite3DbFreeNN (9 samples, 0.02%)</title><rect x="20.7668%" y="133" width="0.0196%" height="15" fill="rgb(209,67,49)" fg:x="9528" fg:w="9"/><text x="21.0168%" y="143.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;rusqlite::cache::CachedStatement&gt; (77 samples, 0.17%)</title><rect x="20.6229%" y="181" width="0.1678%" height="15" fill="rgb(213,87,29)" fg:x="9462" fg:w="77"/><text x="20.8729%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (7 samples, 0.02%)</title><rect x="20.9084%" y="165" width="0.0153%" height="15" fill="rgb(205,151,52)" fg:x="9593" fg:w="7"/><text x="21.1584%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.02%)</title><rect x="20.9804%" y="149" width="0.0196%" height="15" fill="rgb(253,215,39)" fg:x="9626" fg:w="9"/><text x="21.2304%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (8 samples, 0.02%)</title><rect x="21.0000%" y="149" width="0.0174%" height="15" fill="rgb(221,220,41)" fg:x="9635" fg:w="8"/><text x="21.2500%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="21.0610%" y="133" width="0.0109%" height="15" fill="rgb(218,133,21)" fg:x="9663" fg:w="5"/><text x="21.3110%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (70 samples, 0.15%)</title><rect x="20.9237%" y="165" width="0.1526%" height="15" fill="rgb(221,193,43)" fg:x="9600" fg:w="70"/><text x="21.1737%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.05%)</title><rect x="21.0218%" y="149" width="0.0545%" height="15" fill="rgb(240,128,52)" fg:x="9645" fg:w="25"/><text x="21.2718%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.02%)</title><rect x="21.1373%" y="133" width="0.0218%" height="15" fill="rgb(253,114,12)" fg:x="9698" fg:w="10"/><text x="21.3873%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (81 samples, 0.18%)</title><rect x="21.0763%" y="165" width="0.1765%" height="15" fill="rgb(215,223,47)" fg:x="9670" fg:w="81"/><text x="21.3263%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (63 samples, 0.14%)</title><rect x="21.1155%" y="149" width="0.1373%" height="15" fill="rgb(248,225,23)" fg:x="9688" fg:w="63"/><text x="21.3655%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.09%)</title><rect x="21.1613%" y="133" width="0.0915%" height="15" fill="rgb(250,108,0)" fg:x="9709" fg:w="42"/><text x="21.4113%" y="143.50"></text></g><g><title>url-shortener`rusqlite::cache::StatementCache::get (215 samples, 0.47%)</title><rect x="20.7929%" y="181" width="0.4686%" height="15" fill="rgb(228,208,7)" fg:x="9540" fg:w="215"/><text x="21.0429%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="21.2920%" y="149" width="0.0240%" height="15" fill="rgb(244,45,10)" fg:x="9769" fg:w="11"/><text x="21.5420%" y="159.50"></text></g><g><title>url-shortener`sqlite3DbMallocRawNN (10 samples, 0.02%)</title><rect x="21.3901%" y="133" width="0.0218%" height="15" fill="rgb(207,125,25)" fg:x="9814" fg:w="10"/><text x="21.6401%" y="143.50"></text></g><g><title>url-shortener`sqlite3VdbeMemSetStr (63 samples, 0.14%)</title><rect x="21.3226%" y="149" width="0.1373%" height="15" fill="rgb(210,195,18)" fg:x="9783" fg:w="63"/><text x="21.5726%" y="159.50"></text></g><g><title>url-shortener`sqlite3VdbeMemGrow (22 samples, 0.05%)</title><rect x="21.4119%" y="133" width="0.0480%" height="15" fill="rgb(249,80,12)" fg:x="9824" fg:w="22"/><text x="21.6619%" y="143.50"></text></g><g><title>url-shortener`bindText (97 samples, 0.21%)</title><rect x="21.2702%" y="165" width="0.2114%" height="15" fill="rgb(221,65,9)" fg:x="9759" fg:w="97"/><text x="21.5202%" y="175.50"></text></g><g><title>url-shortener`vdbeUnbind (10 samples, 0.02%)</title><rect x="21.4599%" y="149" width="0.0218%" height="15" fill="rgb(235,49,36)" fg:x="9846" fg:w="10"/><text x="21.7099%" y="159.50"></text></g><g><title>url-shortener`sqlite3VdbeMemSetStr (5 samples, 0.01%)</title><rect x="21.4817%" y="165" width="0.0109%" height="15" fill="rgb(225,32,20)" fg:x="9856" fg:w="5"/><text x="21.7317%" y="175.50"></text></g><g><title>url-shortener`rusqlite::statement::Statement::bind_parameter (108 samples, 0.24%)</title><rect x="21.2615%" y="181" width="0.2354%" height="15" fill="rgb(215,141,46)" fg:x="9755" fg:w="108"/><text x="21.5115%" y="191.50"></text></g><g><title>url-shortener`sqlite3VdbeExec (19 samples, 0.04%)</title><rect x="21.5340%" y="165" width="0.0414%" height="15" fill="rgb(250,160,47)" fg:x="9880" fg:w="19"/><text x="21.7840%" y="175.50"></text></g><g><title>url-shortener`sqlite3WalDefaultHook (5 samples, 0.01%)</title><rect x="21.5819%" y="165" width="0.0109%" height="15" fill="rgb(216,222,40)" fg:x="9902" fg:w="5"/><text x="21.8319%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="21.6691%" y="149" width="0.0305%" height="15" fill="rgb(234,217,39)" fg:x="9942" fg:w="14"/><text x="21.9191%" y="159.50"></text></g><g><title>url-shortener`btreeBeginTrans (6 samples, 0.01%)</title><rect x="21.7171%" y="149" width="0.0131%" height="15" fill="rgb(207,178,40)" fg:x="9964" fg:w="6"/><text x="21.9671%" y="159.50"></text></g><g><title>url-shortener`btreeParseCellPtr (13 samples, 0.03%)</title><rect x="21.7388%" y="149" width="0.0283%" height="15" fill="rgb(221,136,13)" fg:x="9974" fg:w="13"/><text x="21.9888%" y="159.50"></text></g><g><title>url-shortener`getCellInfo (7 samples, 0.02%)</title><rect x="21.7672%" y="149" width="0.0153%" height="15" fill="rgb(249,199,10)" fg:x="9987" fg:w="7"/><text x="22.0172%" y="159.50"></text></g><g><title>url-shortener`sqlite3BtreeBeginTrans (8 samples, 0.02%)</title><rect x="21.7824%" y="149" width="0.0174%" height="15" fill="rgb(249,222,13)" fg:x="9994" fg:w="8"/><text x="22.0324%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.08%)</title><rect x="22.2990%" y="133" width="0.0828%" height="15" fill="rgb(244,185,38)" fg:x="10231" fg:w="38"/><text x="22.5490%" y="143.50"></text></g><g><title>url-shortener`getPageNormal (17 samples, 0.04%)</title><rect x="22.5278%" y="117" width="0.0371%" height="15" fill="rgb(236,202,9)" fg:x="10336" fg:w="17"/><text x="22.7778%" y="127.50"></text></g><g><title>url-shortener`pcache1Fetch (12 samples, 0.03%)</title><rect x="22.5387%" y="101" width="0.0262%" height="15" fill="rgb(250,229,37)" fg:x="10341" fg:w="12"/><text x="22.7887%" y="111.50"></text></g><g><title>url-shortener`walIndexReadHdr (6 samples, 0.01%)</title><rect x="22.5911%" y="101" width="0.0131%" height="15" fill="rgb(206,174,23)" fg:x="10365" fg:w="6"/><text x="22.8411%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.01%)</title><rect x="22.6630%" y="85" width="0.0131%" height="15" fill="rgb(211,33,43)" fg:x="10398" fg:w="6"/><text x="22.9130%" y="95.50"></text></g><g><title>url-shortener`unixShmBarrier (5 samples, 0.01%)</title><rect x="22.6978%" y="85" width="0.0109%" height="15" fill="rgb(245,58,50)" fg:x="10414" fg:w="5"/><text x="22.9478%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1,719 samples, 3.75%)</title><rect x="22.7305%" y="69" width="3.7466%" height="15" fill="rgb(244,68,36)" fg:x="10429" fg:w="1719"/><text x="22.9805%" y="79.50">libs..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (12 samples, 0.03%)</title><rect x="26.4837%" y="69" width="0.0262%" height="15" fill="rgb(232,229,15)" fg:x="12151" fg:w="12"/><text x="26.7337%" y="79.50"></text></g><g><title>url-shortener`unixShmLock (1,748 samples, 3.81%)</title><rect x="22.7087%" y="85" width="3.8099%" height="15" fill="rgb(254,30,23)" fg:x="10419" fg:w="1748"/><text x="22.9587%" y="95.50">url-..</text></g><g><title>url-shortener`unixShmBarrier (11 samples, 0.02%)</title><rect x="26.5339%" y="69" width="0.0240%" height="15" fill="rgb(235,160,14)" fg:x="12174" fg:w="11"/><text x="26.7839%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (7 samples, 0.02%)</title><rect x="26.5775%" y="53" width="0.0153%" height="15" fill="rgb(212,155,44)" fg:x="12194" fg:w="7"/><text x="26.8275%" y="63.50"></text></g><g><title>url-shortener`walIndexReadHdr (41 samples, 0.09%)</title><rect x="26.5186%" y="85" width="0.0894%" height="15" fill="rgb(226,2,50)" fg:x="12167" fg:w="41"/><text x="26.7686%" y="95.50"></text></g><g><title>url-shortener`walIndexTryHdr (23 samples, 0.05%)</title><rect x="26.5578%" y="69" width="0.0501%" height="15" fill="rgb(234,177,6)" fg:x="12185" fg:w="23"/><text x="26.8078%" y="79.50"></text></g><g><title>url-shortener`sqlite3PagerSharedLock (1,857 samples, 4.05%)</title><rect x="22.5693%" y="117" width="4.0474%" height="15" fill="rgb(217,24,9)" fg:x="10355" fg:w="1857"/><text x="22.8193%" y="127.50">url-..</text></g><g><title>url-shortener`walTryBeginRead (1,841 samples, 4.01%)</title><rect x="22.6041%" y="101" width="4.0126%" height="15" fill="rgb(220,13,46)" fg:x="10371" fg:w="1841"/><text x="22.8541%" y="111.50">url-..</text></g><g><title>libsystem_kernel.dylib`__fcntl (554 samples, 1.21%)</title><rect x="26.6254%" y="101" width="1.2075%" height="15" fill="rgb(239,221,27)" fg:x="12216" fg:w="554"/><text x="26.8754%" y="111.50"></text></g><g><title>url-shortener`unixShmLock (563 samples, 1.23%)</title><rect x="26.6167%" y="117" width="1.2271%" height="15" fill="rgb(222,198,25)" fg:x="12212" fg:w="563"/><text x="26.8667%" y="127.50"></text></g><g><title>url-shortener`btreeBeginTrans (2,508 samples, 5.47%)</title><rect x="22.4058%" y="133" width="5.4663%" height="15" fill="rgb(211,99,13)" fg:x="10280" fg:w="2508"/><text x="22.6558%" y="143.50">url-sho..</text></g><g><title>url-shortener`walTryBeginRead (13 samples, 0.03%)</title><rect x="27.8438%" y="117" width="0.0283%" height="15" fill="rgb(232,111,31)" fg:x="12775" fg:w="13"/><text x="28.0938%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.02%)</title><rect x="27.9702%" y="53" width="0.0196%" height="15" fill="rgb(245,82,37)" fg:x="12833" fg:w="9"/><text x="28.2202%" y="63.50"></text></g><g><title>url-shortener`getPageNormal (37 samples, 0.08%)</title><rect x="27.9157%" y="85" width="0.0806%" height="15" fill="rgb(227,149,46)" fg:x="12808" fg:w="37"/><text x="28.1657%" y="95.50"></text></g><g><title>url-shortener`pcache1Fetch (24 samples, 0.05%)</title><rect x="27.9440%" y="69" width="0.0523%" height="15" fill="rgb(218,36,50)" fg:x="12821" fg:w="24"/><text x="28.1940%" y="79.50"></text></g><g><title>url-shortener`getAndInitPage (49 samples, 0.11%)</title><rect x="27.9004%" y="101" width="0.1068%" height="15" fill="rgb(226,80,48)" fg:x="12801" fg:w="49"/><text x="28.1504%" y="111.50"></text></g><g><title>url-shortener`pcache1Fetch (5 samples, 0.01%)</title><rect x="27.9963%" y="85" width="0.0109%" height="15" fill="rgb(238,224,15)" fg:x="12845" fg:w="5"/><text x="28.2463%" y="95.50"></text></g><g><title>url-shortener`moveToChild (71 samples, 0.15%)</title><rect x="27.8830%" y="117" width="0.1547%" height="15" fill="rgb(241,136,10)" fg:x="12793" fg:w="71"/><text x="28.1330%" y="127.50"></text></g><g><title>url-shortener`getPageNormal (14 samples, 0.03%)</title><rect x="28.0072%" y="101" width="0.0305%" height="15" fill="rgb(208,32,45)" fg:x="12850" fg:w="14"/><text x="28.2572%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.01%)</title><rect x="28.0770%" y="53" width="0.0109%" height="15" fill="rgb(207,135,9)" fg:x="12882" fg:w="5"/><text x="28.3270%" y="63.50"></text></g><g><title>url-shortener`getPageNormal (13 samples, 0.03%)</title><rect x="28.0661%" y="85" width="0.0283%" height="15" fill="rgb(206,86,44)" fg:x="12877" fg:w="13"/><text x="28.3161%" y="95.50"></text></g><g><title>url-shortener`pcache1Fetch (10 samples, 0.02%)</title><rect x="28.0726%" y="69" width="0.0218%" height="15" fill="rgb(245,177,15)" fg:x="12880" fg:w="10"/><text x="28.3226%" y="79.50"></text></g><g><title>url-shortener`btreeLast (104 samples, 0.23%)</title><rect x="27.8721%" y="133" width="0.2267%" height="15" fill="rgb(206,64,50)" fg:x="12788" fg:w="104"/><text x="28.1221%" y="143.50"></text></g><g><title>url-shortener`moveToRoot (28 samples, 0.06%)</title><rect x="28.0377%" y="117" width="0.0610%" height="15" fill="rgb(234,36,40)" fg:x="12864" fg:w="28"/><text x="28.2877%" y="127.50"></text></g><g><title>url-shortener`getAndInitPage (16 samples, 0.03%)</title><rect x="28.0639%" y="101" width="0.0349%" height="15" fill="rgb(213,64,8)" fg:x="12876" fg:w="16"/><text x="28.3139%" y="111.50"></text></g><g><title>url-shortener`sqlite3BtreeCursor (8 samples, 0.02%)</title><rect x="28.1271%" y="133" width="0.0174%" height="15" fill="rgb(210,75,36)" fg:x="12905" fg:w="8"/><text x="28.3771%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (30 samples, 0.07%)</title><rect x="28.3167%" y="117" width="0.0654%" height="15" fill="rgb(229,88,21)" fg:x="12992" fg:w="30"/><text x="28.5667%" y="127.50"></text></g><g><title>url-shortener`pcache1Fetch (78 samples, 0.17%)</title><rect x="28.4214%" y="85" width="0.1700%" height="15" fill="rgb(252,204,47)" fg:x="13040" fg:w="78"/><text x="28.6714%" y="95.50"></text></g><g><title>url-shortener`pcache1FetchStage2 (22 samples, 0.05%)</title><rect x="28.5434%" y="69" width="0.0480%" height="15" fill="rgb(208,77,27)" fg:x="13096" fg:w="22"/><text x="28.7934%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`pread (881 samples, 1.92%)</title><rect x="28.5979%" y="69" width="1.9202%" height="15" fill="rgb(221,76,26)" fg:x="13121" fg:w="881"/><text x="28.8479%" y="79.50">l..</text></g><g><title>url-shortener`readDbPage (886 samples, 1.93%)</title><rect x="28.5914%" y="85" width="1.9311%" height="15" fill="rgb(225,139,18)" fg:x="13118" fg:w="886"/><text x="28.8414%" y="95.50">u..</text></g><g><title>url-shortener`getPageNormal (976 samples, 2.13%)</title><rect x="28.3974%" y="101" width="2.1272%" height="15" fill="rgb(230,137,11)" fg:x="13029" fg:w="976"/><text x="28.6474%" y="111.50">u..</text></g><g><title>url-shortener`getAndInitPage (983 samples, 2.14%)</title><rect x="28.3865%" y="117" width="2.1425%" height="15" fill="rgb(212,28,1)" fg:x="13024" fg:w="983"/><text x="28.6365%" y="127.50">u..</text></g><g><title>url-shortener`getPageNormal (31 samples, 0.07%)</title><rect x="30.5442%" y="85" width="0.0676%" height="15" fill="rgb(248,164,17)" fg:x="14014" fg:w="31"/><text x="30.7942%" y="95.50"></text></g><g><title>url-shortener`pcache1Fetch (25 samples, 0.05%)</title><rect x="30.5573%" y="69" width="0.0545%" height="15" fill="rgb(222,171,42)" fg:x="14020" fg:w="25"/><text x="30.8073%" y="79.50"></text></g><g><title>url-shortener`getAndInitPage (40 samples, 0.09%)</title><rect x="30.5290%" y="101" width="0.0872%" height="15" fill="rgb(243,84,45)" fg:x="14007" fg:w="40"/><text x="30.7790%" y="111.50"></text></g><g><title>url-shortener`moveToRoot (41 samples, 0.09%)</title><rect x="30.5290%" y="117" width="0.0894%" height="15" fill="rgb(252,49,23)" fg:x="14007" fg:w="41"/><text x="30.7790%" y="127.50"></text></g><g><title>url-shortener`sqlite3BtreeIndexMoveto (1,445 samples, 3.15%)</title><rect x="28.1445%" y="133" width="3.1495%" height="15" fill="rgb(215,19,7)" fg:x="12913" fg:w="1445"/><text x="28.3945%" y="143.50">url..</text></g><g><title>url-shortener`vdbeRecordCompareString (310 samples, 0.68%)</title><rect x="30.6183%" y="117" width="0.6757%" height="15" fill="rgb(238,81,41)" fg:x="14048" fg:w="310"/><text x="30.8683%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="31.3746%" y="117" width="0.0153%" height="15" fill="rgb(210,199,37)" fg:x="14395" fg:w="7"/><text x="31.6246%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.05%)</title><rect x="31.5207%" y="101" width="0.0458%" height="15" fill="rgb(244,192,49)" fg:x="14462" fg:w="21"/><text x="31.7707%" y="111.50"></text></g><g><title>url-shortener`allocateBtreePage (7 samples, 0.02%)</title><rect x="31.5708%" y="101" width="0.0153%" height="15" fill="rgb(226,211,11)" fg:x="14485" fg:w="7"/><text x="31.8208%" y="111.50"></text></g><g><title>url-shortener`btreeGetUnusedPage (7 samples, 0.02%)</title><rect x="31.5708%" y="85" width="0.0153%" height="15" fill="rgb(236,162,54)" fg:x="14485" fg:w="7"/><text x="31.8208%" y="95.50"></text></g><g><title>url-shortener`getPageNormal (5 samples, 0.01%)</title><rect x="31.5752%" y="69" width="0.0109%" height="15" fill="rgb(220,229,9)" fg:x="14487" fg:w="5"/><text x="31.8252%" y="79.50"></text></g><g><title>url-shortener`getAndInitPage (107 samples, 0.23%)</title><rect x="31.6122%" y="101" width="0.2332%" height="15" fill="rgb(250,87,22)" fg:x="14504" fg:w="107"/><text x="31.8622%" y="111.50"></text></g><g><title>url-shortener`getPageNormal (107 samples, 0.23%)</title><rect x="31.6122%" y="85" width="0.2332%" height="15" fill="rgb(239,43,17)" fg:x="14504" fg:w="107"/><text x="31.8622%" y="95.50"></text></g><g><title>url-shortener`readDbPage (105 samples, 0.23%)</title><rect x="31.6166%" y="69" width="0.2289%" height="15" fill="rgb(231,177,25)" fg:x="14506" fg:w="105"/><text x="31.8666%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`pread (104 samples, 0.23%)</title><rect x="31.6188%" y="53" width="0.2267%" height="15" fill="rgb(219,179,1)" fg:x="14507" fg:w="104"/><text x="31.8688%" y="63.50"></text></g><g><title>url-shortener`insertCell (7 samples, 0.02%)</title><rect x="31.8454%" y="101" width="0.0153%" height="15" fill="rgb(238,219,53)" fg:x="14611" fg:w="7"/><text x="32.0954%" y="111.50"></text></g><g><title>url-shortener`pageFreeArray (27 samples, 0.06%)</title><rect x="31.8607%" y="101" width="0.0588%" height="15" fill="rgb(232,167,36)" fg:x="14618" fg:w="27"/><text x="32.1107%" y="111.50"></text></g><g><title>url-shortener`freeSpace (11 samples, 0.02%)</title><rect x="31.8956%" y="85" width="0.0240%" height="15" fill="rgb(244,19,51)" fg:x="14634" fg:w="11"/><text x="32.1456%" y="95.50"></text></g><g><title>url-shortener`pageInsertArray (27 samples, 0.06%)</title><rect x="31.9195%" y="101" width="0.0588%" height="15" fill="rgb(224,6,22)" fg:x="14645" fg:w="27"/><text x="32.1695%" y="111.50"></text></g><g><title>url-shortener`pageFindSlot (9 samples, 0.02%)</title><rect x="31.9588%" y="85" width="0.0196%" height="15" fill="rgb(224,145,5)" fg:x="14663" fg:w="9"/><text x="32.2088%" y="95.50"></text></g><g><title>url-shortener`sqlite3Malloc (6 samples, 0.01%)</title><rect x="31.9784%" y="85" width="0.0131%" height="15" fill="rgb(234,130,49)" fg:x="14672" fg:w="6"/><text x="32.2284%" y="95.50"></text></g><g><title>url-shortener`pcache1Alloc (8 samples, 0.02%)</title><rect x="31.9784%" y="101" width="0.0174%" height="15" fill="rgb(254,6,2)" fg:x="14672" fg:w="8"/><text x="32.2284%" y="111.50"></text></g><g><title>url-shortener`sqlite3Malloc (6 samples, 0.01%)</title><rect x="32.0154%" y="101" width="0.0131%" height="15" fill="rgb(208,96,46)" fg:x="14689" fg:w="6"/><text x="32.2654%" y="111.50"></text></g><g><title>url-shortener`sqlite3MemMalloc (5 samples, 0.01%)</title><rect x="32.0176%" y="85" width="0.0109%" height="15" fill="rgb(239,3,39)" fg:x="14690" fg:w="5"/><text x="32.2676%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="32.0176%" y="69" width="0.0109%" height="15" fill="rgb(233,210,1)" fg:x="14690" fg:w="5"/><text x="32.2676%" y="79.50"></text></g><g><title>url-shortener`pcache1Fetch (6 samples, 0.01%)</title><rect x="32.0350%" y="85" width="0.0131%" height="15" fill="rgb(244,137,37)" fg:x="14698" fg:w="6"/><text x="32.2850%" y="95.50"></text></g><g><title>url-shortener`sqlite3PcacheMove (10 samples, 0.02%)</title><rect x="32.0307%" y="101" width="0.0218%" height="15" fill="rgb(240,136,2)" fg:x="14696" fg:w="10"/><text x="32.2807%" y="111.50"></text></g><g><title>url-shortener`balance (302 samples, 0.66%)</title><rect x="31.3986%" y="117" width="0.6582%" height="15" fill="rgb(239,18,37)" fg:x="14406" fg:w="302"/><text x="31.6486%" y="127.50"></text></g><g><title>url-shortener`btreeComputeFreeSpace (32 samples, 0.07%)</title><rect x="32.0568%" y="117" width="0.0697%" height="15" fill="rgb(218,185,22)" fg:x="14708" fg:w="32"/><text x="32.3068%" y="127.50"></text></g><g><title>url-shortener`defragmentPage (12 samples, 0.03%)</title><rect x="32.1353%" y="117" width="0.0262%" height="15" fill="rgb(225,218,4)" fg:x="14744" fg:w="12"/><text x="32.3853%" y="127.50"></text></g><g><title>url-shortener`pager_write (9 samples, 0.02%)</title><rect x="32.1724%" y="117" width="0.0196%" height="15" fill="rgb(230,182,32)" fg:x="14761" fg:w="9"/><text x="32.4224%" y="127.50"></text></g><g><title>url-shortener`putVarint64 (8 samples, 0.02%)</title><rect x="32.1920%" y="117" width="0.0174%" height="15" fill="rgb(242,56,43)" fg:x="14770" fg:w="8"/><text x="32.4420%" y="127.50"></text></g><g><title>url-shortener`sqlite3BtreeInsert (424 samples, 0.92%)</title><rect x="31.2940%" y="133" width="0.9241%" height="15" fill="rgb(233,99,24)" fg:x="14358" fg:w="424"/><text x="31.5440%" y="143.50"></text></g><g><title>url-shortener`sqlite3DbMallocRawNN (8 samples, 0.02%)</title><rect x="32.2225%" y="133" width="0.0174%" height="15" fill="rgb(234,209,42)" fg:x="14784" fg:w="8"/><text x="32.4725%" y="143.50"></text></g><g><title>url-shortener`sqlite3PagerSharedLock (9 samples, 0.02%)</title><rect x="32.2399%" y="133" width="0.0196%" height="15" fill="rgb(227,7,12)" fg:x="14792" fg:w="9"/><text x="32.4899%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (7 samples, 0.02%)</title><rect x="32.3119%" y="117" width="0.0153%" height="15" fill="rgb(245,203,43)" fg:x="14825" fg:w="7"/><text x="32.5619%" y="127.50"></text></g><g><title>url-shortener`releaseMemArray (14 samples, 0.03%)</title><rect x="32.3315%" y="117" width="0.0305%" height="15" fill="rgb(238,205,33)" fg:x="14834" fg:w="14"/><text x="32.5815%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (5 samples, 0.01%)</title><rect x="32.3969%" y="85" width="0.0109%" height="15" fill="rgb(231,56,7)" fg:x="14864" fg:w="5"/><text x="32.6469%" y="95.50"></text></g><g><title>url-shortener`btreeReleaseAllCursorPages (33 samples, 0.07%)</title><rect x="32.3881%" y="101" width="0.0719%" height="15" fill="rgb(244,186,29)" fg:x="14860" fg:w="33"/><text x="32.6381%" y="111.50"></text></g><g><title>url-shortener`pcache1Unpin (24 samples, 0.05%)</title><rect x="32.4078%" y="85" width="0.0523%" height="15" fill="rgb(234,111,31)" fg:x="14869" fg:w="24"/><text x="32.6578%" y="95.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (17 samples, 0.04%)</title><rect x="32.4230%" y="69" width="0.0371%" height="15" fill="rgb(241,149,10)" fg:x="14876" fg:w="17"/><text x="32.6730%" y="79.50"></text></g><g><title>url-shortener`sqlite3VdbeFreeCursorNN (60 samples, 0.13%)</title><rect x="32.3707%" y="117" width="0.1308%" height="15" fill="rgb(249,206,44)" fg:x="14852" fg:w="60"/><text x="32.6207%" y="127.50"></text></g><g><title>url-shortener`sqlite3PcacheRelease (15 samples, 0.03%)</title><rect x="32.4688%" y="101" width="0.0327%" height="15" fill="rgb(251,153,30)" fg:x="14897" fg:w="15"/><text x="32.7188%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`fsync (32 samples, 0.07%)</title><rect x="32.6671%" y="53" width="0.0697%" height="15" fill="rgb(239,152,38)" fg:x="14988" fg:w="32"/><text x="32.9171%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`pwrite (8 samples, 0.02%)</title><rect x="32.7369%" y="53" width="0.0174%" height="15" fill="rgb(249,139,47)" fg:x="15020" fg:w="8"/><text x="32.9869%" y="63.50"></text></g><g><title>url-shortener`unixWrite (9 samples, 0.02%)</title><rect x="32.7674%" y="53" width="0.0196%" height="15" fill="rgb(244,64,35)" fg:x="15034" fg:w="9"/><text x="33.0174%" y="63.50"></text></g><g><title>url-shortener`walIndexAppend (83 samples, 0.18%)</title><rect x="32.7935%" y="53" width="0.1809%" height="15" fill="rgb(216,46,15)" fg:x="15046" fg:w="83"/><text x="33.0435%" y="63.50"></text></g><g><title>url-shortener`walIndexWriteHdr (8 samples, 0.02%)</title><rect x="32.9744%" y="53" width="0.0174%" height="15" fill="rgb(250,74,19)" fg:x="15129" fg:w="8"/><text x="33.2244%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`pwrite (11,105 samples, 24.20%)</title><rect x="33.0224%" y="37" width="24.2039%" height="15" fill="rgb(249,42,33)" fg:x="15151" fg:w="11105"/><text x="33.2724%" y="47.50">libsystem_kernel.dylib`pwrite</text></g><g><title>url-shortener`unixWrite (10 samples, 0.02%)</title><rect x="57.2263%" y="37" width="0.0218%" height="15" fill="rgb(242,149,17)" fg:x="26256" fg:w="10"/><text x="57.4763%" y="47.50"></text></g><g><title>url-shortener`walChecksumBytes (851 samples, 1.85%)</title><rect x="57.2481%" y="37" width="1.8548%" height="15" fill="rgb(244,29,21)" fg:x="26266" fg:w="851"/><text x="57.4981%" y="47.50">u..</text></g><g><title>url-shortener`pagerWalFrames (12,160 samples, 26.50%)</title><rect x="32.6039%" y="69" width="26.5033%" height="15" fill="rgb(220,130,37)" fg:x="14959" fg:w="12160"/><text x="32.8539%" y="79.50">url-shortener`pagerWalFrames</text></g><g><title>url-shortener`walWriteOneFrame (11,981 samples, 26.11%)</title><rect x="32.9940%" y="53" width="26.1132%" height="15" fill="rgb(211,67,2)" fg:x="15138" fg:w="11981"/><text x="33.2440%" y="63.50">url-shortener`walWriteOneFrame</text></g><g><title>url-shortener`sqlite3PcacheCleanAll (31 samples, 0.07%)</title><rect x="59.1073%" y="69" width="0.0676%" height="15" fill="rgb(235,68,52)" fg:x="27119" fg:w="31"/><text x="59.3573%" y="79.50"></text></g><g><title>url-shortener`pcache1Unpin (18 samples, 0.04%)</title><rect x="59.1356%" y="53" width="0.0392%" height="15" fill="rgb(246,142,3)" fg:x="27132" fg:w="18"/><text x="59.3856%" y="63.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.03%)</title><rect x="59.1443%" y="37" width="0.0305%" height="15" fill="rgb(241,25,7)" fg:x="27136" fg:w="14"/><text x="59.3943%" y="47.50"></text></g><g><title>url-shortener`sqlite3PcacheDirtyList (25 samples, 0.05%)</title><rect x="59.1748%" y="69" width="0.0545%" height="15" fill="rgb(242,119,39)" fg:x="27150" fg:w="25"/><text x="59.4248%" y="79.50"></text></g><g><title>url-shortener`walIndexAppend (9 samples, 0.02%)</title><rect x="59.2293%" y="69" width="0.0196%" height="15" fill="rgb(241,98,45)" fg:x="27175" fg:w="9"/><text x="59.4793%" y="79.50"></text></g><g><title>url-shortener`sqlite3PagerCommitPhaseOne (12,240 samples, 26.68%)</title><rect x="32.5778%" y="85" width="26.6777%" height="15" fill="rgb(254,28,30)" fg:x="14947" fg:w="12240"/><text x="32.8278%" y="95.50">url-shortener`sqlite3PagerCommitPhaseOne</text></g><g><title>url-shortener`sqlite3BtreeCommitPhaseOne (12,253 samples, 26.71%)</title><rect x="32.5516%" y="101" width="26.7060%" height="15" fill="rgb(241,142,54)" fg:x="14935" fg:w="12253"/><text x="32.8016%" y="111.50">url-shortener`sqlite3BtreeCommitPhaseOne</text></g><g><title>url-shortener`btreeEndTransaction (13 samples, 0.03%)</title><rect x="59.2707%" y="85" width="0.0283%" height="15" fill="rgb(222,85,15)" fg:x="27194" fg:w="13"/><text x="59.5207%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.01%)</title><rect x="59.3383%" y="69" width="0.0131%" height="15" fill="rgb(210,85,47)" fg:x="27225" fg:w="6"/><text x="59.5883%" y="79.50"></text></g><g><title>url-shortener`pcache1Truncate (191 samples, 0.42%)</title><rect x="59.3557%" y="69" width="0.4163%" height="15" fill="rgb(224,206,25)" fg:x="27233" fg:w="191"/><text x="59.6057%" y="79.50"></text></g><g><title>url-shortener`pcache1TruncateUnsafe (188 samples, 0.41%)</title><rect x="59.3623%" y="53" width="0.4098%" height="15" fill="rgb(243,201,19)" fg:x="27236" fg:w="188"/><text x="59.6123%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (789 samples, 1.72%)</title><rect x="59.8004%" y="53" width="1.7197%" height="15" fill="rgb(236,59,4)" fg:x="27437" fg:w="789"/><text x="60.0504%" y="63.50"></text></g><g><title>url-shortener`pager_end_transaction (1,027 samples, 2.24%)</title><rect x="59.3012%" y="85" width="2.2384%" height="15" fill="rgb(254,179,45)" fg:x="27208" fg:w="1027"/><text x="59.5512%" y="95.50">u..</text></g><g><title>url-shortener`unixShmLock (805 samples, 1.75%)</title><rect x="59.7851%" y="69" width="1.7545%" height="15" fill="rgb(226,14,10)" fg:x="27430" fg:w="805"/><text x="60.0351%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (602 samples, 1.31%)</title><rect x="61.5789%" y="53" width="1.3121%" height="15" fill="rgb(244,27,41)" fg:x="28253" fg:w="602"/><text x="61.8289%" y="63.50"></text></g><g><title>url-shortener`pager_unlock (633 samples, 1.38%)</title><rect x="61.5396%" y="85" width="1.3797%" height="15" fill="rgb(235,35,32)" fg:x="28235" fg:w="633"/><text x="61.7896%" y="95.50"></text></g><g><title>url-shortener`unixShmLock (623 samples, 1.36%)</title><rect x="61.5614%" y="69" width="1.3579%" height="15" fill="rgb(218,68,31)" fg:x="28245" fg:w="623"/><text x="61.8114%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (6 samples, 0.01%)</title><rect x="62.9062%" y="53" width="0.0131%" height="15" fill="rgb(207,120,37)" fg:x="28862" fg:w="6"/><text x="63.1562%" y="63.50"></text></g><g><title>url-shortener`sqlite3BitvecDestroy (7 samples, 0.02%)</title><rect x="62.9302%" y="85" width="0.0153%" height="15" fill="rgb(227,98,0)" fg:x="28873" fg:w="7"/><text x="63.1802%" y="95.50"></text></g><g><title>url-shortener`sqlite3BtreeCommitPhaseTwo (1,702 samples, 3.71%)</title><rect x="59.2576%" y="101" width="3.7096%" height="15" fill="rgb(207,7,3)" fg:x="27188" fg:w="1702"/><text x="59.5076%" y="111.50">url-..</text></g><g><title>url-shortener`sqlite3VdbeHalt (14,091 samples, 30.71%)</title><rect x="32.2595%" y="133" width="30.7121%" height="15" fill="rgb(206,98,19)" fg:x="14801" fg:w="14091"/><text x="32.5095%" y="143.50">url-shortener`sqlite3VdbeHalt</text></g><g><title>url-shortener`vdbeCommit (13,980 samples, 30.47%)</title><rect x="32.5015%" y="117" width="30.4701%" height="15" fill="rgb(217,5,26)" fg:x="14912" fg:w="13980"/><text x="32.7515%" y="127.50">url-shortener`vdbeCommit</text></g><g><title>url-shortener`sqlite3VdbeExec (18,902 samples, 41.20%)</title><rect x="21.8151%" y="149" width="41.1979%" height="15" fill="rgb(235,190,38)" fg:x="10009" fg:w="18902"/><text x="22.0651%" y="159.50">url-shortener`sqlite3VdbeExec</text></g><g><title>url-shortener`vdbeRecordCompareString (12 samples, 0.03%)</title><rect x="62.9869%" y="133" width="0.0262%" height="15" fill="rgb(247,86,24)" fg:x="28899" fg:w="12"/><text x="63.2369%" y="143.50"></text></g><g><title>url-shortener`sqlite3VdbeHalt (8 samples, 0.02%)</title><rect x="63.0130%" y="149" width="0.0174%" height="15" fill="rgb(205,101,16)" fg:x="28911" fg:w="8"/><text x="63.2630%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="63.0457%" y="101" width="0.0283%" height="15" fill="rgb(246,168,33)" fg:x="28926" fg:w="13"/><text x="63.2957%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`fstat (6 samples, 0.01%)</title><rect x="63.3465%" y="85" width="0.0131%" height="15" fill="rgb(231,114,1)" fg:x="29064" fg:w="6"/><text x="63.5965%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`fsync (5,680 samples, 12.38%)</title><rect x="63.3596%" y="85" width="12.3799%" height="15" fill="rgb(207,184,53)" fg:x="29070" fg:w="5680"/><text x="63.6096%" y="95.50">libsystem_kernel.d..</text></g><g><title>libsystem_kernel.dylib`ftruncate (25 samples, 0.05%)</title><rect x="75.7394%" y="85" width="0.0545%" height="15" fill="rgb(224,95,51)" fg:x="34750" fg:w="25"/><text x="75.9894%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`pread (912 samples, 1.99%)</title><rect x="75.7939%" y="85" width="1.9878%" height="15" fill="rgb(212,188,45)" fg:x="34775" fg:w="912"/><text x="76.0439%" y="95.50">l..</text></g><g><title>libsystem_kernel.dylib`pwrite (2,517 samples, 5.49%)</title><rect x="77.7817%" y="85" width="5.4859%" height="15" fill="rgb(223,154,38)" fg:x="35687" fg:w="2517"/><text x="78.0317%" y="95.50">libsyst..</text></g><g><title>url-shortener`unixShmLock (12 samples, 0.03%)</title><rect x="83.2807%" y="85" width="0.0262%" height="15" fill="rgb(251,22,52)" fg:x="38210" fg:w="12"/><text x="83.5307%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (12 samples, 0.03%)</title><rect x="83.2807%" y="69" width="0.0262%" height="15" fill="rgb(229,209,22)" fg:x="38210" fg:w="12"/><text x="83.5307%" y="79.50"></text></g><g><title>url-shortener`sqlite3WalCheckpoint (9,285 samples, 20.24%)</title><rect x="63.0762%" y="101" width="20.2371%" height="15" fill="rgb(234,138,34)" fg:x="28940" fg:w="9285"/><text x="63.3262%" y="111.50">url-shortener`sqlite3WalCheckpoi..</text></g><g><title>url-shortener`rusqlite::statement::Statement::execute_with_bound_parameters (28,369 samples, 61.83%)</title><rect x="21.4969%" y="181" width="61.8317%" height="15" fill="rgb(212,95,11)" fg:x="9863" fg:w="28369"/><text x="21.7469%" y="191.50">url-shortener`rusqlite::statement::Statement::execute_with_bound_parameters</text></g><g><title>url-shortener`sqlite3_step (28,322 samples, 61.73%)</title><rect x="21.5994%" y="165" width="61.7293%" height="15" fill="rgb(240,179,47)" fg:x="9910" fg:w="28322"/><text x="21.8494%" y="175.50">url-shortener`sqlite3_step</text></g><g><title>url-shortener`sqlite3WalDefaultHook (9,312 samples, 20.30%)</title><rect x="63.0326%" y="149" width="20.2960%" height="15" fill="rgb(240,163,11)" fg:x="28920" fg:w="9312"/><text x="63.2826%" y="159.50">url-shortener`sqlite3WalDefaultH..</text></g><g><title>url-shortener`sqlite3_wal_checkpoint_v2 (9,309 samples, 20.29%)</title><rect x="63.0392%" y="133" width="20.2894%" height="15" fill="rgb(236,37,12)" fg:x="28923" fg:w="9309"/><text x="63.2892%" y="143.50">url-shortener`sqlite3_wal_checkp..</text></g><g><title>url-shortener`sqlite3BtreeCheckpoint (9,308 samples, 20.29%)</title><rect x="63.0413%" y="117" width="20.2873%" height="15" fill="rgb(232,164,16)" fg:x="28924" fg:w="9308"/><text x="63.2913%" y="127.50">url-shortener`sqlite3BtreeCheckp..</text></g><g><title>url-shortener`sqlite3_changes64 (5 samples, 0.01%)</title><rect x="83.3330%" y="181" width="0.0109%" height="15" fill="rgb(244,205,15)" fg:x="38234" fg:w="5"/><text x="83.5830%" y="191.50"></text></g><g><title>url-shortener`sqlite3_reset (6 samples, 0.01%)</title><rect x="83.3460%" y="181" width="0.0131%" height="15" fill="rgb(223,117,47)" fg:x="38240" fg:w="6"/><text x="83.5960%" y="191.50"></text></g><g><title>url-shortener`&lt;url_shortener::storage::sqlite::SqliteStorage as url_shortener::storage::storage::Storage&gt;::set (28,858 samples, 62.90%)</title><rect x="20.4660%" y="197" width="62.8975%" height="15" fill="rgb(244,107,35)" fg:x="9390" fg:w="28858"/><text x="20.7160%" y="207.50">url-shortener`&lt;url_shortener::storage::sqlite::SqliteStorage as url_shortener::storage::storage::Storage..</text></g><g><title>url-shortener`DYLD-STUB$$memcpy (10 samples, 0.02%)</title><rect x="83.3722%" y="197" width="0.0218%" height="15" fill="rgb(205,140,8)" fg:x="38252" fg:w="10"/><text x="83.6222%" y="207.50"></text></g><g><title>url-shortener`axum_core::body::Body::new (42 samples, 0.09%)</title><rect x="83.4136%" y="197" width="0.0915%" height="15" fill="rgb(228,84,46)" fg:x="38271" fg:w="42"/><text x="83.6636%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.09%)</title><rect x="83.4136%" y="181" width="0.0915%" height="15" fill="rgb(254,188,9)" fg:x="38271" fg:w="42"/><text x="83.6636%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.07%)</title><rect x="83.4332%" y="165" width="0.0719%" height="15" fill="rgb(206,112,54)" fg:x="38280" fg:w="33"/><text x="83.6832%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.05%)</title><rect x="83.4594%" y="149" width="0.0458%" height="15" fill="rgb(216,84,49)" fg:x="38292" fg:w="21"/><text x="83.7094%" y="159.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;rusqlite::cache::CachedStatement&gt; (5 samples, 0.01%)</title><rect x="83.5139%" y="197" width="0.0109%" height="15" fill="rgb(214,194,35)" fg:x="38317" fg:w="5"/><text x="83.7639%" y="207.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (11 samples, 0.02%)</title><rect x="83.5248%" y="197" width="0.0240%" height="15" fill="rgb(249,28,3)" fg:x="38322" fg:w="11"/><text x="83.7748%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (6 samples, 0.01%)</title><rect x="83.5771%" y="165" width="0.0131%" height="15" fill="rgb(222,56,52)" fg:x="38346" fg:w="6"/><text x="83.8271%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (15 samples, 0.03%)</title><rect x="83.6141%" y="149" width="0.0327%" height="15" fill="rgb(245,217,50)" fg:x="38363" fg:w="15"/><text x="83.8641%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (92 samples, 0.20%)</title><rect x="83.5618%" y="181" width="0.2005%" height="15" fill="rgb(213,201,24)" fg:x="38339" fg:w="92"/><text x="83.8118%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (77 samples, 0.17%)</title><rect x="83.5945%" y="165" width="0.1678%" height="15" fill="rgb(248,116,28)" fg:x="38354" fg:w="77"/><text x="83.8445%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (53 samples, 0.12%)</title><rect x="83.6468%" y="149" width="0.1155%" height="15" fill="rgb(219,72,43)" fg:x="38378" fg:w="53"/><text x="83.8968%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="83.7449%" y="133" width="0.0174%" height="15" fill="rgb(209,138,14)" fg:x="38423" fg:w="8"/><text x="83.9949%" y="143.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (105 samples, 0.23%)</title><rect x="83.5487%" y="197" width="0.2289%" height="15" fill="rgb(222,18,33)" fg:x="38333" fg:w="105"/><text x="83.7987%" y="207.50"></text></g><g><title>url-shortener`http::header::map::hash_elem_using (5 samples, 0.01%)</title><rect x="83.7776%" y="197" width="0.0109%" height="15" fill="rgb(213,199,7)" fg:x="38438" fg:w="5"/><text x="84.0276%" y="207.50"></text></g><g><title>url-shortener`rusqlite::cache::StatementCache::get (12 samples, 0.03%)</title><rect x="83.7885%" y="197" width="0.0262%" height="15" fill="rgb(250,110,10)" fg:x="38443" fg:w="12"/><text x="84.0385%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (11 samples, 0.02%)</title><rect x="83.9563%" y="181" width="0.0240%" height="15" fill="rgb(248,123,6)" fg:x="38520" fg:w="11"/><text x="84.2063%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="83.9868%" y="149" width="0.0327%" height="15" fill="rgb(206,91,31)" fg:x="38534" fg:w="15"/><text x="84.2368%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="84.0021%" y="133" width="0.0174%" height="15" fill="rgb(211,154,13)" fg:x="38541" fg:w="8"/><text x="84.2521%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.0086%" y="117" width="0.0109%" height="15" fill="rgb(225,148,7)" fg:x="38544" fg:w="5"/><text x="84.2586%" y="127.50"></text></g><g><title>url-shortener`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (21 samples, 0.05%)</title><rect x="83.9803%" y="181" width="0.0458%" height="15" fill="rgb(220,160,43)" fg:x="38531" fg:w="21"/><text x="84.2303%" y="191.50"></text></g><g><title>url-shortener`alloc::raw_vec::finish_grow (19 samples, 0.04%)</title><rect x="83.9847%" y="165" width="0.0414%" height="15" fill="rgb(213,52,39)" fg:x="38533" fg:w="19"/><text x="84.2347%" y="175.50"></text></g><g><title>url-shortener`&lt;F as axum::handler::Handler&lt;(M,T1,T2),S&gt;&gt;::call::_{{closure}} (35,935 samples, 78.32%)</title><rect x="5.7061%" y="213" width="78.3222%" height="15" fill="rgb(243,137,7)" fg:x="2618" fg:w="35935"/><text x="5.9561%" y="223.50">url-shortener`&lt;F as axum::handler::Handler&lt;(M,T1,T2),S&gt;&gt;::call::_{{closure}}</text></g><g><title>url-shortener`url_shortener::id::generate_id (93 samples, 0.20%)</title><rect x="83.8255%" y="197" width="0.2027%" height="15" fill="rgb(230,79,13)" fg:x="38460" fg:w="93"/><text x="84.0755%" y="207.50"></text></g><g><title>url-shortener`&lt;url_shortener::storage::sqlite::SqliteStorage as url_shortener::storage::storage::Storage&gt;::set (10 samples, 0.02%)</title><rect x="84.0391%" y="213" width="0.0218%" height="15" fill="rgb(247,105,23)" fg:x="38558" fg:w="10"/><text x="84.2891%" y="223.50"></text></g><g><title>url-shortener`DYLD-STUB$$free (5 samples, 0.01%)</title><rect x="84.0609%" y="213" width="0.0109%" height="15" fill="rgb(223,179,41)" fg:x="38568" fg:w="5"/><text x="84.3109%" y="223.50"></text></g><g><title>url-shortener`DYLD-STUB$$malloc (5 samples, 0.01%)</title><rect x="84.0718%" y="213" width="0.0109%" height="15" fill="rgb(218,9,34)" fg:x="38573" fg:w="5"/><text x="84.3218%" y="223.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;&lt;url_shortener::redirect_to_url as axum::handler::Handler&lt;(axum_core::extract::private::ViaParts,axum::extract::state::State&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;url_shortener::AppState&gt;&gt;&gt;,axum::extract::path::Path&lt;alloc::string::String&gt;),alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;url_shortener::AppState&gt;&gt;&gt;&gt;::call::{{closure}}&gt; (7 samples, 0.02%)</title><rect x="84.1067%" y="213" width="0.0153%" height="15" fill="rgb(222,106,8)" fg:x="38589" fg:w="7"/><text x="84.3567%" y="223.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (5 samples, 0.01%)</title><rect x="84.1263%" y="213" width="0.0109%" height="15" fill="rgb(211,220,0)" fg:x="38598" fg:w="5"/><text x="84.3763%" y="223.50"></text></g><g><title>url-shortener`&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (36,155 samples, 78.80%)</title><rect x="5.3486%" y="229" width="78.8017%" height="15" fill="rgb(229,52,16)" fg:x="2454" fg:w="36155"/><text x="5.5986%" y="239.50">url-shortener`&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll</text></g><g><title>url-shortener`http::header::map::hash_elem_using (6 samples, 0.01%)</title><rect x="84.1372%" y="213" width="0.0131%" height="15" fill="rgb(212,155,18)" fg:x="38603" fg:w="6"/><text x="84.3872%" y="223.50"></text></g><g><title>url-shortener`DYLD-STUB$$clock_gettime (6 samples, 0.01%)</title><rect x="84.1503%" y="229" width="0.0131%" height="15" fill="rgb(242,21,14)" fg:x="38609" fg:w="6"/><text x="84.4003%" y="239.50"></text></g><g><title>url-shortener`DYLD-STUB$$free (7 samples, 0.02%)</title><rect x="84.1634%" y="229" width="0.0153%" height="15" fill="rgb(222,19,48)" fg:x="38615" fg:w="7"/><text x="84.4134%" y="239.50"></text></g><g><title>url-shortener`DYLD-STUB$$memcpy (6 samples, 0.01%)</title><rect x="84.1917%" y="229" width="0.0131%" height="15" fill="rgb(232,45,27)" fg:x="38628" fg:w="6"/><text x="84.4417%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.01%)</title><rect x="84.3486%" y="197" width="0.0109%" height="15" fill="rgb(249,103,42)" fg:x="38700" fg:w="5"/><text x="84.5986%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.11%)</title><rect x="84.3661%" y="181" width="0.1090%" height="15" fill="rgb(246,81,33)" fg:x="38708" fg:w="50"/><text x="84.6161%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.09%)</title><rect x="84.3857%" y="165" width="0.0894%" height="15" fill="rgb(252,33,42)" fg:x="38717" fg:w="41"/><text x="84.6357%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.08%)</title><rect x="84.3922%" y="149" width="0.0828%" height="15" fill="rgb(209,212,41)" fg:x="38720" fg:w="38"/><text x="84.6422%" y="159.50"></text></g><g><title>url-shortener`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (54 samples, 0.12%)</title><rect x="84.3595%" y="197" width="0.1177%" height="15" fill="rgb(207,154,6)" fg:x="38705" fg:w="54"/><text x="84.6095%" y="207.50"></text></g><g><title>url-shortener`&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (64 samples, 0.14%)</title><rect x="84.3399%" y="213" width="0.1395%" height="15" fill="rgb(223,64,47)" fg:x="38696" fg:w="64"/><text x="84.5899%" y="223.50"></text></g><g><title>url-shortener`axum::routing::method_routing::MethodRouter&lt;S,E&gt;::call_with_state (137 samples, 0.30%)</title><rect x="84.2091%" y="229" width="0.2986%" height="15" fill="rgb(211,161,38)" fg:x="38636" fg:w="137"/><text x="84.4591%" y="239.50"></text></g><g><title>url-shortener`axum::routing::route::Route&lt;E&gt;::oneshot_inner_owned (13 samples, 0.03%)</title><rect x="84.4794%" y="213" width="0.0283%" height="15" fill="rgb(219,138,40)" fg:x="38760" fg:w="13"/><text x="84.7294%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="84.5535%" y="213" width="0.0109%" height="15" fill="rgb(241,228,46)" fg:x="38794" fg:w="5"/><text x="84.8035%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="84.5644%" y="213" width="0.0131%" height="15" fill="rgb(223,209,38)" fg:x="38799" fg:w="6"/><text x="84.8144%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (7 samples, 0.02%)</title><rect x="84.6145%" y="165" width="0.0153%" height="15" fill="rgb(236,164,45)" fg:x="38822" fg:w="7"/><text x="84.8645%" y="175.50"></text></g><g><title>url-shortener`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (40 samples, 0.09%)</title><rect x="84.5840%" y="213" width="0.0872%" height="15" fill="rgb(231,15,5)" fg:x="38808" fg:w="40"/><text x="84.8340%" y="223.50"></text></g><g><title>url-shortener`alloc::raw_vec::finish_grow (31 samples, 0.07%)</title><rect x="84.6036%" y="197" width="0.0676%" height="15" fill="rgb(252,35,15)" fg:x="38817" fg:w="31"/><text x="84.8536%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.06%)</title><rect x="84.6124%" y="181" width="0.0588%" height="15" fill="rgb(248,181,18)" fg:x="38821" fg:w="27"/><text x="84.8624%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.04%)</title><rect x="84.6298%" y="165" width="0.0414%" height="15" fill="rgb(233,39,42)" fg:x="38829" fg:w="19"/><text x="84.8798%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.03%)</title><rect x="84.6385%" y="149" width="0.0327%" height="15" fill="rgb(238,110,33)" fg:x="38833" fg:w="15"/><text x="84.8885%" y="159.50"></text></g><g><title>url-shortener`axum::routing::path_router::Node::at (78 samples, 0.17%)</title><rect x="84.5077%" y="229" width="0.1700%" height="15" fill="rgb(233,195,10)" fg:x="38773" fg:w="78"/><text x="84.7577%" y="239.50"></text></g><g><title>url-shortener`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.09%)</title><rect x="84.7540%" y="213" width="0.0894%" height="15" fill="rgb(254,105,3)" fg:x="38886" fg:w="41"/><text x="85.0040%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.06%)</title><rect x="84.8565%" y="197" width="0.0610%" height="15" fill="rgb(221,225,9)" fg:x="38933" fg:w="28"/><text x="85.1065%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.04%)</title><rect x="84.8783%" y="181" width="0.0392%" height="15" fill="rgb(224,227,45)" fg:x="38943" fg:w="18"/><text x="85.1283%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="84.9001%" y="165" width="0.0174%" height="15" fill="rgb(229,198,43)" fg:x="38953" fg:w="8"/><text x="85.1501%" y="175.50"></text></g><g><title>url-shortener`axum::routing::url_params::insert_url_params (107 samples, 0.23%)</title><rect x="84.6865%" y="229" width="0.2332%" height="15" fill="rgb(206,209,35)" fg:x="38855" fg:w="107"/><text x="84.9365%" y="239.50"></text></g><g><title>url-shortener`http::extensions::Extensions::insert (33 samples, 0.07%)</title><rect x="84.8478%" y="213" width="0.0719%" height="15" fill="rgb(245,195,53)" fg:x="38929" fg:w="33"/><text x="85.0978%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.07%)</title><rect x="84.9240%" y="213" width="0.0741%" height="15" fill="rgb(240,92,26)" fg:x="38964" fg:w="34"/><text x="85.1740%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.05%)</title><rect x="84.9458%" y="197" width="0.0523%" height="15" fill="rgb(207,40,23)" fg:x="38974" fg:w="24"/><text x="85.1958%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.03%)</title><rect x="84.9633%" y="181" width="0.0349%" height="15" fill="rgb(223,111,35)" fg:x="38982" fg:w="16"/><text x="85.2133%" y="191.50"></text></g><g><title>url-shortener`bytes::bytes::Bytes::copy_from_slice (38 samples, 0.08%)</title><rect x="84.9197%" y="229" width="0.0828%" height="15" fill="rgb(229,147,28)" fg:x="38962" fg:w="38"/><text x="85.1697%" y="239.50"></text></g><g><title>url-shortener`bytes::bytes::shared_drop (6 samples, 0.01%)</title><rect x="85.0112%" y="229" width="0.0131%" height="15" fill="rgb(211,29,28)" fg:x="39004" fg:w="6"/><text x="85.2612%" y="239.50"></text></g><g><title>url-shortener`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="85.0374%" y="229" width="0.0153%" height="15" fill="rgb(228,72,33)" fg:x="39016" fg:w="7"/><text x="85.2874%" y="239.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;&lt;url_shortener::redirect_to_url as axum::handler::Handler&lt;(axum_core::extract::private::ViaParts,axum::extract::state::State&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;url_shortener::AppState&gt;&gt;&gt;,axum::extract::path::Path&lt;alloc::string::String&gt;),alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;url_shortener::AppState&gt;&gt;&gt;&gt;::call::{{closure}}&gt; (20 samples, 0.04%)</title><rect x="85.0548%" y="229" width="0.0436%" height="15" fill="rgb(205,214,31)" fg:x="39024" fg:w="20"/><text x="85.3048%" y="239.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;hyper::body::incoming::Sender&gt; (6 samples, 0.01%)</title><rect x="85.1224%" y="229" width="0.0131%" height="15" fill="rgb(224,111,15)" fg:x="39055" fg:w="6"/><text x="85.3724%" y="239.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;hyper_util::service::oneshot::Oneshot&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::Serve&lt;axum::routing::Router,axum::routing::Router&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;&gt; (16 samples, 0.03%)</title><rect x="85.1355%" y="229" width="0.0349%" height="15" fill="rgb(253,21,26)" fg:x="39061" fg:w="16"/><text x="85.3855%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="85.2728%" y="181" width="0.0218%" height="15" fill="rgb(245,139,43)" fg:x="39124" fg:w="10"/><text x="85.5228%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (51 samples, 0.11%)</title><rect x="85.1878%" y="213" width="0.1112%" height="15" fill="rgb(252,170,7)" fg:x="39085" fg:w="51"/><text x="85.4378%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.08%)</title><rect x="85.2205%" y="197" width="0.0785%" height="15" fill="rgb(231,118,14)" fg:x="39100" fg:w="36"/><text x="85.4705%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.02%)</title><rect x="85.3033%" y="213" width="0.0174%" height="15" fill="rgb(238,83,0)" fg:x="39138" fg:w="8"/><text x="85.5533%" y="223.50"></text></g><g><title>url-shortener`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (67 samples, 0.15%)</title><rect x="85.1769%" y="229" width="0.1460%" height="15" fill="rgb(221,39,39)" fg:x="39080" fg:w="67"/><text x="85.4269%" y="239.50"></text></g><g><title>url-shortener`core::result::Result::Ok (6 samples, 0.01%)</title><rect x="85.3229%" y="229" width="0.0131%" height="15" fill="rgb(222,119,46)" fg:x="39147" fg:w="6"/><text x="85.5729%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (8 samples, 0.02%)</title><rect x="85.3861%" y="197" width="0.0174%" height="15" fill="rgb(222,165,49)" fg:x="39176" fg:w="8"/><text x="85.6361%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.02%)</title><rect x="85.4166%" y="181" width="0.0174%" height="15" fill="rgb(219,113,52)" fg:x="39190" fg:w="8"/><text x="85.6666%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.13%)</title><rect x="85.3752%" y="213" width="0.1286%" height="15" fill="rgb(214,7,15)" fg:x="39171" fg:w="59"/><text x="85.6252%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (44 samples, 0.10%)</title><rect x="85.4079%" y="197" width="0.0959%" height="15" fill="rgb(235,32,4)" fg:x="39186" fg:w="44"/><text x="85.6579%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.07%)</title><rect x="85.4341%" y="181" width="0.0697%" height="15" fill="rgb(238,90,54)" fg:x="39198" fg:w="32"/><text x="85.6841%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="85.4864%" y="165" width="0.0174%" height="15" fill="rgb(213,208,19)" fg:x="39222" fg:w="8"/><text x="85.7364%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.01%)</title><rect x="85.5060%" y="213" width="0.0131%" height="15" fill="rgb(233,156,4)" fg:x="39231" fg:w="6"/><text x="85.7560%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (13 samples, 0.03%)</title><rect x="85.5409%" y="197" width="0.0283%" height="15" fill="rgb(207,194,5)" fg:x="39247" fg:w="13"/><text x="85.7909%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.01%)</title><rect x="85.6128%" y="149" width="0.0131%" height="15" fill="rgb(206,111,30)" fg:x="39280" fg:w="6"/><text x="85.8628%" y="159.50"></text></g><g><title>url-shortener`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (159 samples, 0.35%)</title><rect x="85.3425%" y="229" width="0.3465%" height="15" fill="rgb(243,70,54)" fg:x="39156" fg:w="159"/><text x="85.5925%" y="239.50"></text></g><g><title>url-shortener`std::sys::sync::once_box::OnceBox&lt;T&gt;::initialize (71 samples, 0.15%)</title><rect x="85.5343%" y="213" width="0.1547%" height="15" fill="rgb(242,28,8)" fg:x="39244" fg:w="71"/><text x="85.7843%" y="223.50"></text></g><g><title>url-shortener`std::sys::sync::mutex::pthread::AllocatedMutex::new (50 samples, 0.11%)</title><rect x="85.5801%" y="197" width="0.1090%" height="15" fill="rgb(219,106,18)" fg:x="39265" fg:w="50"/><text x="85.8301%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.10%)</title><rect x="85.5866%" y="181" width="0.1024%" height="15" fill="rgb(244,222,10)" fg:x="39268" fg:w="47"/><text x="85.8366%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.09%)</title><rect x="85.6041%" y="165" width="0.0850%" height="15" fill="rgb(236,179,52)" fg:x="39276" fg:w="39"/><text x="85.8541%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.06%)</title><rect x="85.6259%" y="149" width="0.0632%" height="15" fill="rgb(213,23,39)" fg:x="39286" fg:w="29"/><text x="85.8759%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="85.6716%" y="133" width="0.0174%" height="15" fill="rgb(238,48,10)" fg:x="39307" fg:w="8"/><text x="85.9216%" y="143.50"></text></g><g><title>url-shortener`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="85.6891%" y="229" width="0.0174%" height="15" fill="rgb(251,196,23)" fg:x="39315" fg:w="8"/><text x="85.9391%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (9 samples, 0.02%)</title><rect x="85.7174%" y="197" width="0.0196%" height="15" fill="rgb(250,152,24)" fg:x="39328" fg:w="9"/><text x="85.9674%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.03%)</title><rect x="85.7436%" y="181" width="0.0262%" height="15" fill="rgb(209,150,17)" fg:x="39340" fg:w="12"/><text x="85.9936%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (5 samples, 0.01%)</title><rect x="85.8111%" y="165" width="0.0109%" height="15" fill="rgb(234,202,34)" fg:x="39371" fg:w="5"/><text x="86.0611%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.13%)</title><rect x="85.7109%" y="213" width="0.1286%" height="15" fill="rgb(253,148,53)" fg:x="39325" fg:w="59"/><text x="85.9609%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (46 samples, 0.10%)</title><rect x="85.7392%" y="197" width="0.1003%" height="15" fill="rgb(218,129,16)" fg:x="39338" fg:w="46"/><text x="85.9892%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.07%)</title><rect x="85.7697%" y="181" width="0.0697%" height="15" fill="rgb(216,85,19)" fg:x="39352" fg:w="32"/><text x="86.0197%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="85.8220%" y="165" width="0.0174%" height="15" fill="rgb(235,228,7)" fg:x="39376" fg:w="8"/><text x="86.0720%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (5 samples, 0.01%)</title><rect x="85.8961%" y="165" width="0.0109%" height="15" fill="rgb(245,175,0)" fg:x="39410" fg:w="5"/><text x="86.1461%" y="175.50"></text></g><g><title>url-shortener`http::extensions::Extensions::insert (123 samples, 0.27%)</title><rect x="85.7065%" y="229" width="0.2681%" height="15" fill="rgb(208,168,36)" fg:x="39323" fg:w="123"/><text x="85.9565%" y="239.50"></text></g><g><title>url-shortener`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (59 samples, 0.13%)</title><rect x="85.8460%" y="213" width="0.1286%" height="15" fill="rgb(246,171,24)" fg:x="39387" fg:w="59"/><text x="86.0960%" y="223.50"></text></g><g><title>url-shortener`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (45 samples, 0.10%)</title><rect x="85.8765%" y="197" width="0.0981%" height="15" fill="rgb(215,142,24)" fg:x="39401" fg:w="45"/><text x="86.1265%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.08%)</title><rect x="85.8939%" y="181" width="0.0806%" height="15" fill="rgb(250,187,7)" fg:x="39409" fg:w="37"/><text x="86.1439%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.06%)</title><rect x="85.9114%" y="165" width="0.0632%" height="15" fill="rgb(228,66,33)" fg:x="39417" fg:w="29"/><text x="86.1614%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.04%)</title><rect x="85.9354%" y="149" width="0.0392%" height="15" fill="rgb(234,215,21)" fg:x="39428" fg:w="18"/><text x="86.1854%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="85.9615%" y="133" width="0.0131%" height="15" fill="rgb(222,191,20)" fg:x="39440" fg:w="6"/><text x="86.2115%" y="143.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::contains_key (9 samples, 0.02%)</title><rect x="85.9746%" y="229" width="0.0196%" height="15" fill="rgb(245,79,54)" fg:x="39446" fg:w="9"/><text x="86.2246%" y="239.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::get (14 samples, 0.03%)</title><rect x="85.9942%" y="229" width="0.0305%" height="15" fill="rgb(240,10,37)" fg:x="39455" fg:w="14"/><text x="86.2442%" y="239.50"></text></g><g><title>url-shortener`http::header::map::hash_elem_using (8 samples, 0.02%)</title><rect x="86.0073%" y="213" width="0.0174%" height="15" fill="rgb(214,192,32)" fg:x="39461" fg:w="8"/><text x="86.2573%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="86.0748%" y="213" width="0.0131%" height="15" fill="rgb(209,36,54)" fg:x="39492" fg:w="6"/><text x="86.3248%" y="223.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_insert2 (34 samples, 0.07%)</title><rect x="86.0247%" y="229" width="0.0741%" height="15" fill="rgb(220,10,11)" fg:x="39469" fg:w="34"/><text x="86.2747%" y="239.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (5 samples, 0.01%)</title><rect x="86.0988%" y="229" width="0.0109%" height="15" fill="rgb(221,106,17)" fg:x="39503" fg:w="5"/><text x="86.3488%" y="239.50"></text></g><g><title>url-shortener`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (7 samples, 0.02%)</title><rect x="86.1097%" y="229" width="0.0153%" height="15" fill="rgb(251,142,44)" fg:x="39508" fg:w="7"/><text x="86.3597%" y="239.50"></text></g><g><title>url-shortener`http::header::map::hash_elem_using (9 samples, 0.02%)</title><rect x="86.1250%" y="229" width="0.0196%" height="15" fill="rgb(238,13,15)" fg:x="39515" fg:w="9"/><text x="86.3750%" y="239.50"></text></g><g><title>url-shortener`http::header::name::HeaderName::from_bytes (9 samples, 0.02%)</title><rect x="86.1446%" y="229" width="0.0196%" height="15" fill="rgb(208,107,27)" fg:x="39524" fg:w="9"/><text x="86.3946%" y="239.50"></text></g><g><title>url-shortener`http::header::name::StandardHeader::as_str (7 samples, 0.02%)</title><rect x="86.1642%" y="229" width="0.0153%" height="15" fill="rgb(205,136,37)" fg:x="39533" fg:w="7"/><text x="86.4142%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`writev (3,399 samples, 7.41%)</title><rect x="86.3168%" y="213" width="7.4083%" height="15" fill="rgb(250,205,27)" fg:x="39603" fg:w="3399"/><text x="86.5668%" y="223.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="93.7294%" y="213" width="0.0109%" height="15" fill="rgb(210,80,43)" fg:x="43004" fg:w="5"/><text x="93.9794%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="93.7905%" y="181" width="0.0218%" height="15" fill="rgb(247,160,36)" fg:x="43032" fg:w="10"/><text x="94.0405%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.07%)</title><rect x="93.7403%" y="213" width="0.0741%" height="15" fill="rgb(234,13,49)" fg:x="43009" fg:w="34"/><text x="93.9903%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.06%)</title><rect x="93.7556%" y="197" width="0.0588%" height="15" fill="rgb(234,122,0)" fg:x="43016" fg:w="27"/><text x="94.0056%" y="207.50"></text></g><g><title>url-shortener`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (5 samples, 0.01%)</title><rect x="93.8232%" y="213" width="0.0109%" height="15" fill="rgb(207,146,38)" fg:x="43047" fg:w="5"/><text x="94.0732%" y="223.50"></text></g><g><title>url-shortener`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write_vectored (17 samples, 0.04%)</title><rect x="93.8340%" y="213" width="0.0371%" height="15" fill="rgb(207,177,25)" fg:x="43052" fg:w="17"/><text x="94.0840%" y="223.50"></text></g><g><title>url-shortener`tokio::runtime::io::registration::Registration::poll_ready (9 samples, 0.02%)</title><rect x="93.8515%" y="197" width="0.0196%" height="15" fill="rgb(211,178,42)" fg:x="43060" fg:w="9"/><text x="94.1015%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (7 samples, 0.02%)</title><rect x="93.8973%" y="181" width="0.0153%" height="15" fill="rgb(230,69,54)" fg:x="43081" fg:w="7"/><text x="94.1473%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.03%)</title><rect x="93.9801%" y="165" width="0.0305%" height="15" fill="rgb(214,135,41)" fg:x="43119" fg:w="14"/><text x="94.2301%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (67 samples, 0.15%)</title><rect x="93.8776%" y="197" width="0.1460%" height="15" fill="rgb(237,67,25)" fg:x="43072" fg:w="67"/><text x="94.1276%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (49 samples, 0.11%)</title><rect x="93.9169%" y="181" width="0.1068%" height="15" fill="rgb(222,189,50)" fg:x="43090" fg:w="49"/><text x="94.1669%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="94.0106%" y="165" width="0.0131%" height="15" fill="rgb(245,148,34)" fg:x="43133" fg:w="6"/><text x="94.2606%" y="175.50"></text></g><g><title>url-shortener`bytes::bytes::shared_drop (78 samples, 0.17%)</title><rect x="93.8733%" y="213" width="0.1700%" height="15" fill="rgb(222,29,6)" fg:x="43070" fg:w="78"/><text x="94.1233%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.02%)</title><rect x="94.0237%" y="197" width="0.0196%" height="15" fill="rgb(221,189,43)" fg:x="43139" fg:w="9"/><text x="94.2737%" y="207.50"></text></g><g><title>url-shortener`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (6 samples, 0.01%)</title><rect x="94.0433%" y="213" width="0.0131%" height="15" fill="rgb(207,36,27)" fg:x="43148" fg:w="6"/><text x="94.2933%" y="223.50"></text></g><g><title>url-shortener`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (3,608 samples, 7.86%)</title><rect x="86.2013%" y="229" width="7.8638%" height="15" fill="rgb(217,90,24)" fg:x="39550" fg:w="3608"/><text x="86.4513%" y="239.50">url-shorten..</text></g><g><title>url-shortener`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (38 samples, 0.08%)</title><rect x="94.0651%" y="229" width="0.0828%" height="15" fill="rgb(224,66,35)" fg:x="43158" fg:w="38"/><text x="94.3151%" y="239.50"></text></g><g><title>url-shortener`hyper::proto::h1::decode::Decoder::decode (23 samples, 0.05%)</title><rect x="94.0978%" y="213" width="0.0501%" height="15" fill="rgb(221,13,50)" fg:x="43173" fg:w="23"/><text x="94.3478%" y="223.50"></text></g><g><title>url-shortener`&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (13 samples, 0.03%)</title><rect x="94.1196%" y="197" width="0.0283%" height="15" fill="rgb(236,68,49)" fg:x="43183" fg:w="13"/><text x="94.3696%" y="207.50"></text></g><g><title>url-shortener`bytes::bytes_mut::BytesMut::split_to (10 samples, 0.02%)</title><rect x="94.1261%" y="181" width="0.0218%" height="15" fill="rgb(229,146,28)" fg:x="43186" fg:w="10"/><text x="94.3761%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="94.5882%" y="181" width="0.0109%" height="15" fill="rgb(225,31,38)" fg:x="43398" fg:w="5"/><text x="94.8382%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (38 samples, 0.08%)</title><rect x="94.5315%" y="213" width="0.0828%" height="15" fill="rgb(250,208,3)" fg:x="43372" fg:w="38"/><text x="94.7815%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.05%)</title><rect x="94.5598%" y="197" width="0.0545%" height="15" fill="rgb(246,54,23)" fg:x="43385" fg:w="25"/><text x="94.8098%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.02%)</title><rect x="94.5991%" y="181" width="0.0153%" height="15" fill="rgb(243,76,11)" fg:x="43403" fg:w="7"/><text x="94.8491%" y="191.50"></text></g><g><title>url-shortener`&lt;http::header::map::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="94.6252%" y="213" width="0.0305%" height="15" fill="rgb(245,21,50)" fg:x="43415" fg:w="14"/><text x="94.8752%" y="223.50"></text></g><g><title>url-shortener`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (235 samples, 0.51%)</title><rect x="94.1479%" y="229" width="0.5122%" height="15" fill="rgb(228,9,43)" fg:x="43196" fg:w="235"/><text x="94.3979%" y="239.50"></text></g><g><title>url-shortener`hyper::proto::h1::decode::Decoder::decode (16 samples, 0.03%)</title><rect x="94.6601%" y="229" width="0.0349%" height="15" fill="rgb(208,100,47)" fg:x="43431" fg:w="16"/><text x="94.9101%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (2,114 samples, 4.61%)</title><rect x="94.7298%" y="197" width="4.6076%" height="15" fill="rgb(232,26,8)" fg:x="43463" fg:w="2114"/><text x="94.9798%" y="207.50">libsy..</text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="99.3745%" y="181" width="0.0327%" height="15" fill="rgb(216,166,38)" fg:x="45594" fg:w="15"/><text x="99.6245%" y="191.50"></text></g><g><title>url-shortener`DYLD-STUB$$pthread_mutex_unlock (6 samples, 0.01%)</title><rect x="99.4181%" y="181" width="0.0131%" height="15" fill="rgb(251,202,51)" fg:x="45614" fg:w="6"/><text x="99.6681%" y="191.50"></text></g><g><title>url-shortener`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (2,195 samples, 4.78%)</title><rect x="94.7255%" y="213" width="4.7841%" height="15" fill="rgb(254,216,34)" fg:x="43461" fg:w="2195"/><text x="94.9755%" y="223.50">url-sh..</text></g><g><title>url-shortener`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (79 samples, 0.17%)</title><rect x="99.3374%" y="197" width="0.1722%" height="15" fill="rgb(251,32,27)" fg:x="45577" fg:w="79"/><text x="99.5874%" y="207.50"></text></g><g><title>url-shortener`tokio::runtime::io::registration::Registration::poll_ready (36 samples, 0.08%)</title><rect x="99.4311%" y="181" width="0.0785%" height="15" fill="rgb(208,127,28)" fg:x="45620" fg:w="36"/><text x="99.6811%" y="191.50"></text></g><g><title>url-shortener`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (5 samples, 0.01%)</title><rect x="99.5096%" y="213" width="0.0109%" height="15" fill="rgb(224,137,22)" fg:x="45656" fg:w="5"/><text x="99.7596%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="99.5554%" y="197" width="0.0109%" height="15" fill="rgb(254,70,32)" fg:x="45677" fg:w="5"/><text x="99.8054%" y="207.50"></text></g><g><title>url-shortener`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2,292 samples, 5.00%)</title><rect x="94.6950%" y="229" width="4.9955%" height="15" fill="rgb(229,75,37)" fg:x="43447" fg:w="2292"/><text x="94.9450%" y="239.50">url-sh..</text></g><g><title>url-shortener`bytes::bytes_mut::BytesMut::reserve_inner (76 samples, 0.17%)</title><rect x="99.5249%" y="213" width="0.1656%" height="15" fill="rgb(252,64,23)" fg:x="45663" fg:w="76"/><text x="99.7749%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (57 samples, 0.12%)</title><rect x="99.5663%" y="197" width="0.1242%" height="15" fill="rgb(232,162,48)" fg:x="45682" fg:w="57"/><text x="99.8163%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (50 samples, 0.11%)</title><rect x="99.5815%" y="181" width="0.1090%" height="15" fill="rgb(246,160,12)" fg:x="45689" fg:w="50"/><text x="99.8315%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (27 samples, 0.06%)</title><rect x="99.6317%" y="165" width="0.0588%" height="15" fill="rgb(247,166,0)" fg:x="45712" fg:w="27"/><text x="99.8817%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (10 samples, 0.02%)</title><rect x="99.6687%" y="149" width="0.0218%" height="15" fill="rgb(249,219,21)" fg:x="45729" fg:w="10"/><text x="99.9187%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (5 samples, 0.01%)</title><rect x="99.7167%" y="181" width="0.0109%" height="15" fill="rgb(205,209,3)" fg:x="45751" fg:w="5"/><text x="99.9667%" y="191.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (95 samples, 0.21%)</title><rect x="99.7101%" y="197" width="0.2071%" height="15" fill="rgb(243,44,1)" fg:x="45748" fg:w="95"/><text x="99.9601%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (87 samples, 0.19%)</title><rect x="99.7276%" y="181" width="0.1896%" height="15" fill="rgb(206,159,16)" fg:x="45756" fg:w="87"/><text x="99.9776%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (105 samples, 0.23%)</title><rect x="99.6949%" y="213" width="0.2289%" height="15" fill="rgb(244,77,30)" fg:x="45741" fg:w="105"/><text x="99.9449%" y="223.50"></text></g><g><title>url-shortener`std::sys::pal::unix::time::Timespec::now (115 samples, 0.25%)</title><rect x="99.6949%" y="229" width="0.2506%" height="15" fill="rgb(218,69,12)" fg:x="45741" fg:w="115"/><text x="99.9449%" y="239.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (10 samples, 0.02%)</title><rect x="99.9237%" y="213" width="0.0218%" height="15" fill="rgb(212,87,7)" fg:x="45846" fg:w="10"/><text x="100.1737%" y="223.50"></text></g><g><title>url-shortener`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (44,917 samples, 97.90%)</title><rect x="2.0531%" y="245" width="97.8989%" height="15" fill="rgb(245,114,25)" fg:x="942" fg:w="44917"/><text x="2.3031%" y="255.50">url-shortener`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>url-shortener`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (45,298 samples, 98.73%)</title><rect x="1.2576%" y="293" width="98.7293%" height="15" fill="rgb(210,61,42)" fg:x="577" fg:w="45298"/><text x="1.5076%" y="303.50">url-shortener`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>url-shortener`tokio::runtime::task::raw::poll (45,231 samples, 98.58%)</title><rect x="1.4036%" y="277" width="98.5833%" height="15" fill="rgb(211,52,33)" fg:x="644" fg:w="45231"/><text x="1.6536%" y="287.50">url-shortener`tokio::runtime::task::raw::poll</text></g><g><title>url-shortener`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (45,118 samples, 98.34%)</title><rect x="1.6499%" y="261" width="98.3370%" height="15" fill="rgb(234,58,33)" fg:x="757" fg:w="45118"/><text x="1.8999%" y="271.50">url-shortener`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>url-shortener`tokio::runtime::task::waker::clone_waker (6 samples, 0.01%)</title><rect x="99.9738%" y="245" width="0.0131%" height="15" fill="rgb(220,115,36)" fg:x="45869" fg:w="6"/><text x="100.2238%" y="255.50"></text></g><g><title>all (45,881 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(243,153,54)" fg:x="0" fg:w="45881"/><text x="0.2500%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (45,880 samples, 100.00%)</title><rect x="0.0022%" y="389" width="99.9978%" height="15" fill="rgb(251,47,18)" fg:x="1" fg:w="45880"/><text x="0.2522%" y="399.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (45,880 samples, 100.00%)</title><rect x="0.0022%" y="373" width="99.9978%" height="15" fill="rgb(242,102,42)" fg:x="1" fg:w="45880"/><text x="0.2522%" y="383.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>url-shortener`std::sys::pal::unix::thread::Thread::new::thread_start (45,880 samples, 100.00%)</title><rect x="0.0022%" y="357" width="99.9978%" height="15" fill="rgb(234,31,38)" fg:x="1" fg:w="45880"/><text x="0.2522%" y="367.50">url-shortener`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>url-shortener`core::ops::function::FnOnce::call_once{{vtable.shim}} (45,880 samples, 100.00%)</title><rect x="0.0022%" y="341" width="99.9978%" height="15" fill="rgb(221,117,51)" fg:x="1" fg:w="45880"/><text x="0.2522%" y="351.50">url-shortener`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>url-shortener`std::sys::backtrace::__rust_begin_short_backtrace (45,880 samples, 100.00%)</title><rect x="0.0022%" y="325" width="99.9978%" height="15" fill="rgb(212,20,18)" fg:x="1" fg:w="45880"/><text x="0.2522%" y="335.50">url-shortener`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>url-shortener`tokio::runtime::task::raw::poll (45,871 samples, 99.98%)</title><rect x="0.0218%" y="309" width="99.9782%" height="15" fill="rgb(245,133,36)" fg:x="10" fg:w="45871"/><text x="0.2718%" y="319.50">url-shortener`tokio::runtime::task::raw::poll</text></g></svg></svg>